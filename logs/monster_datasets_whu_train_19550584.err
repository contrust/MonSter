The following values were not passed to `accelerate launch` and had defaults used instead:
		More than one GPU was found, enabling multi-GPU training.
		If this was unintended please pass in `--num_processes=1`.
	`--mixed_precision` was set to a value of `'no'`
	`--dynamo_backend` was set to a value of `'no'`
To avoid this warning pass in values for each of the problematic parameters or run `accelerate config`.
xFormers not available
xFormers not available
xFormers not available
xFormers not available
xFormers not available
xFormers not available
xFormers not available
xFormers not available
Error executing job with overrides: []
Traceback (most recent call last):
  File "train_whu.py", line 119, in main
    model.load_state_dict(ckpt, strict=True)
  File "/home/s0214/.conda/envs/monster/lib/python3.8/site-packages/torch/nn/modules/module.py", line 2152, in load_state_dict
    raise RuntimeError('Error(s) in loading state_dict for {}:\n\t{}'.format(
RuntimeError: Error(s) in loading state_dict for Monster:
	Unexpected key(s) in state_dict: "mono_encoder.blocks.12.norm1.weight", "mono_encoder.blocks.12.norm1.bias", "mono_encoder.blocks.12.attn.qkv.weight", "mono_encoder.blocks.12.attn.qkv.bias", "mono_encoder.blocks.12.attn.proj.weight", "mono_encoder.blocks.12.attn.proj.bias", "mono_encoder.blocks.12.ls1.gamma", "mono_encoder.blocks.12.norm2.weight", "mono_encoder.blocks.12.norm2.bias", "mono_encoder.blocks.12.mlp.fc1.weight", "mono_encoder.blocks.12.mlp.fc1.bias", "mono_encoder.blocks.12.mlp.fc2.weight", "mono_encoder.blocks.12.mlp.fc2.bias", "mono_encoder.blocks.12.ls2.gamma", "mono_encoder.blocks.13.norm1.weight", "mono_encoder.blocks.13.norm1.bias", "mono_encoder.blocks.13.attn.qkv.weight", "mono_encoder.blocks.13.attn.qkv.bias", "mono_encoder.blocks.13.attn.proj.weight", "mono_encoder.blocks.13.attn.proj.bias", "mono_encoder.blocks.13.ls1.gamma", "mono_encoder.blocks.13.norm2.weight", "mono_encoder.blocks.13.norm2.bias", "mono_encoder.blocks.13.mlp.fc1.weight", "mono_encoder.blocks.13.mlp.fc1.bias", "mono_encoder.blocks.13.mlp.fc2.weight", "mono_encoder.blocks.13.mlp.fc2.bias", "mono_encoder.blocks.13.ls2.gamma", "mono_encoder.blocks.14.norm1.weight", "mono_encoder.blocks.14.norm1.bias", "mono_encoder.blocks.14.attn.qkv.weight", "mono_encoder.blocks.14.attn.qkv.bias", "mono_encoder.blocks.14.attn.proj.weight", "mono_encoder.blocks.14.attn.proj.bias", "mono_encoder.blocks.14.ls1.gamma", "mono_encoder.blocks.14.norm2.weight", "mono_encoder.blocks.14.norm2.bias", "mono_encoder.blocks.14.mlp.fc1.weight", "mono_encoder.blocks.14.mlp.fc1.bias", "mono_encoder.blocks.14.mlp.fc2.weight", "mono_encoder.blocks.14.mlp.fc2.bias", "mono_encoder.blocks.14.ls2.gamma", "mono_encoder.blocks.15.norm1.weight", "mono_encoder.blocks.15.norm1.bias", "mono_encoder.blocks.15.attn.qkv.weight", "mono_encoder.blocks.15.attn.qkv.bias", "mono_encoder.blocks.15.attn.proj.weight", "mono_encoder.blocks.15.attn.proj.bias", "mono_encoder.blocks.15.ls1.gamma", "mono_encoder.blocks.15.norm2.weight", "mono_encoder.blocks.15.norm2.bias", "mono_encoder.blocks.15.mlp.fc1.weight", "mono_encoder.blocks.15.mlp.fc1.bias", "mono_encoder.blocks.15.mlp.fc2.weight", "mono_encoder.blocks.15.mlp.fc2.bias", "mono_encoder.blocks.15.ls2.gamma", "mono_encoder.blocks.16.norm1.weight", "mono_encoder.blocks.16.norm1.bias", "mono_encoder.blocks.16.attn.qkv.weight", "mono_encoder.blocks.16.attn.qkv.bias", "mono_encoder.blocks.16.attn.proj.weight", "mono_encoder.blocks.16.attn.proj.bias", "mono_encoder.blocks.16.ls1.gamma", "mono_encoder.blocks.16.norm2.weight", "mono_encoder.blocks.16.norm2.bias", "mono_encoder.blocks.16.mlp.fc1.weight", "mono_encoder.blocks.16.mlp.fc1.bias", "mono_encoder.blocks.16.mlp.fc2.weight", "mono_encoder.blocks.16.mlp.fc2.bias", "mono_encoder.blocks.16.ls2.gamma", "mono_encoder.blocks.17.norm1.weight", "mono_encoder.blocks.17.norm1.bias", "mono_encoder.blocks.17.attn.qkv.weight", "mono_encoder.blocks.17.attn.qkv.bias", "mono_encoder.blocks.17.attn.proj.weight", "mono_encoder.blocks.17.attn.proj.bias", "mono_encoder.blocks.17.ls1.gamma", "mono_encoder.blocks.17.norm2.weight", "mono_encoder.blocks.17.norm2.bias", "mono_encoder.blocks.17.mlp.fc1.weight", "mono_encoder.blocks.17.mlp.fc1.bias", "mono_encoder.blocks.17.mlp.fc2.weight", "mono_encoder.blocks.17.mlp.fc2.bias", "mono_encoder.blocks.17.ls2.gamma", "mono_encoder.blocks.18.norm1.weight", "mono_encoder.blocks.18.norm1.bias", "mono_encoder.blocks.18.attn.qkv.weight", "mono_encoder.blocks.18.attn.qkv.bias", "mono_encoder.blocks.18.attn.proj.weight", "mono_encoder.blocks.18.attn.proj.bias", "mono_encoder.blocks.18.ls1.gamma", "mono_encoder.blocks.18.norm2.weight", "mono_encoder.blocks.18.norm2.bias", "mono_encoder.blocks.18.mlp.fc1.weight", "mono_encoder.blocks.18.mlp.fc1.bias", "mono_encoder.blocks.18.mlp.fc2.weight", "mono_encoder.blocks.18.mlp.fc2.bias", "mono_encoder.blocks.18.ls2.gamma", "mono_encoder.blocks.19.norm1.weight", "mono_encoder.blocks.19.norm1.bias", "mono_encoder.blocks.19.attn.qkv.weight", "mono_encoder.blocks.19.attn.qkv.bias", "mono_encoder.blocks.19.attn.proj.weight", "mono_encoder.blocks.19.attn.proj.bias", "mono_encoder.blocks.19.ls1.gamma", "mono_encoder.blocks.19.norm2.weight", "mono_encoder.blocks.19.norm2.bias", "mono_encoder.blocks.19.mlp.fc1.weight", "mono_encoder.blocks.19.mlp.fc1.bias", "mono_encoder.blocks.19.mlp.fc2.weight", "mono_encoder.blocks.19.mlp.fc2.bias", "mono_encoder.blocks.19.ls2.gamma", "mono_encoder.blocks.20.norm1.weight", "mono_encoder.blocks.20.norm1.bias", "mono_encoder.blocks.20.attn.qkv.weight", "mono_encoder.blocks.20.attn.qkv.bias", "mono_encoder.blocks.20.attn.proj.weight", "mono_encoder.blocks.20.attn.proj.bias", "mono_encoder.blocks.20.ls1.gamma", "mono_encoder.blocks.20.norm2.weight", "mono_encoder.blocks.20.norm2.bias", "mono_encoder.blocks.20.mlp.fc1.weight", "mono_encoder.blocks.20.mlp.fc1.bias", "mono_encoder.blocks.20.mlp.fc2.weight", "mono_encoder.blocks.20.mlp.fc2.bias", "mono_encoder.blocks.20.ls2.gamma", "mono_encoder.blocks.21.norm1.weight", "mono_encoder.blocks.21.norm1.bias", "mono_encoder.blocks.21.attn.qkv.weight", "mono_encoder.blocks.21.attn.qkv.bias", "mono_encoder.blocks.21.attn.proj.weight", "mono_encoder.blocks.21.attn.proj.bias", "mono_encoder.blocks.21.ls1.gamma", "mono_encoder.blocks.21.norm2.weight", "mono_encoder.blocks.21.norm2.bias", "mono_encoder.blocks.21.mlp.fc1.weight", "mono_encoder.blocks.21.mlp.fc1.bias", "mono_encoder.blocks.21.mlp.fc2.weight", "mono_encoder.blocks.21.mlp.fc2.bias", "mono_encoder.blocks.21.ls2.gamma", "mono_encoder.blocks.22.norm1.weight", "mono_encoder.blocks.22.norm1.bias", "mono_encoder.blocks.22.attn.qkv.weight", "mono_encoder.blocks.22.attn.qkv.bias", "mono_encoder.blocks.22.attn.proj.weight", "mono_encoder.blocks.22.attn.proj.bias", "mono_encoder.blocks.22.ls1.gamma", "mono_encoder.blocks.22.norm2.weight", "mono_encoder.blocks.22.norm2.bias", "mono_encoder.blocks.22.mlp.fc1.weight", "mono_encoder.blocks.22.mlp.fc1.bias", "mono_encoder.blocks.22.mlp.fc2.weight", "mono_encoder.blocks.22.mlp.fc2.bias", "mono_encoder.blocks.22.ls2.gamma", "mono_encoder.blocks.23.norm1.weight", "mono_encoder.blocks.23.norm1.bias", "mono_encoder.blocks.23.attn.qkv.weight", "mono_encoder.blocks.23.attn.qkv.bias", "mono_encoder.blocks.23.attn.proj.weight", "mono_encoder.blocks.23.attn.proj.bias", "mono_encoder.blocks.23.ls1.gamma", "mono_encoder.blocks.23.norm2.weight", "mono_encoder.blocks.23.norm2.bias", "mono_encoder.blocks.23.mlp.fc1.weight", "mono_encoder.blocks.23.mlp.fc1.bias", "mono_encoder.blocks.23.mlp.fc2.weight", "mono_encoder.blocks.23.mlp.fc2.bias", "mono_encoder.blocks.23.ls2.gamma". 
	size mismatch for feat_transfer.conv4x.0.weight: copying a param with shape torch.Size([48, 304, 5, 5]) from checkpoint, the shape in current model is torch.Size([48, 176, 5, 5]).
	size mismatch for feat_transfer.conv8x.0.weight: copying a param with shape torch.Size([64, 320, 5, 5]) from checkpoint, the shape in current model is torch.Size([64, 192, 5, 5]).
	size mismatch for feat_transfer.conv16x.0.weight: copying a param with shape torch.Size([192, 448, 5, 5]) from checkpoint, the shape in current model is torch.Size([192, 320, 5, 5]).
	size mismatch for feat_transfer.conv32x.0.weight: copying a param with shape torch.Size([160, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([160, 128, 3, 3]).
	size mismatch for feat_transfer.res_16x.weight: copying a param with shape torch.Size([192, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([192, 128, 1, 1]).
	size mismatch for feat_transfer.res_8x.weight: copying a param with shape torch.Size([64, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([64, 128, 1, 1]).
	size mismatch for feat_transfer.res_4x.weight: copying a param with shape torch.Size([48, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([48, 128, 1, 1]).
	size mismatch for feat_transfer_cnet.res_16x.weight: copying a param with shape torch.Size([128, 448, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 320, 3, 3]).
	size mismatch for feat_transfer_cnet.res_8x.weight: copying a param with shape torch.Size([128, 352, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 224, 3, 3]).
	size mismatch for feat_transfer_cnet.res_4x.weight: copying a param with shape torch.Size([128, 304, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 176, 3, 3]).
	size mismatch for mono_encoder.cls_token: copying a param with shape torch.Size([1, 1, 1024]) from checkpoint, the shape in current model is torch.Size([1, 1, 768]).
	size mismatch for mono_encoder.pos_embed: copying a param with shape torch.Size([1, 1370, 1024]) from checkpoint, the shape in current model is torch.Size([1, 1370, 768]).
	size mismatch for mono_encoder.mask_token: copying a param with shape torch.Size([1, 1024]) from checkpoint, the shape in current model is torch.Size([1, 768]).
	size mismatch for mono_encoder.patch_embed.proj.weight: copying a param with shape torch.Size([1024, 3, 14, 14]) from checkpoint, the shape in current model is torch.Size([768, 3, 14, 14]).
	size mismatch for mono_encoder.patch_embed.proj.bias: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.0.norm1.weight: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.0.norm1.bias: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.0.attn.qkv.weight: copying a param with shape torch.Size([3072, 1024]) from checkpoint, the shape in current model is torch.Size([2304, 768]).
	size mismatch for mono_encoder.blocks.0.attn.qkv.bias: copying a param with shape torch.Size([3072]) from checkpoint, the shape in current model is torch.Size([2304]).
	size mismatch for mono_encoder.blocks.0.attn.proj.weight: copying a param with shape torch.Size([1024, 1024]) from checkpoint, the shape in current model is torch.Size([768, 768]).
	size mismatch for mono_encoder.blocks.0.attn.proj.bias: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.0.ls1.gamma: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.0.norm2.weight: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.0.norm2.bias: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.0.mlp.fc1.weight: copying a param with shape torch.Size([4096, 1024]) from checkpoint, the shape in current model is torch.Size([3072, 768]).
	size mismatch for mono_encoder.blocks.0.mlp.fc1.bias: copying a param with shape torch.Size([4096]) from checkpoint, the shape in current model is torch.Size([3072]).
	size mismatch for mono_encoder.blocks.0.mlp.fc2.weight: copying a param with shape torch.Size([1024, 4096]) from checkpoint, the shape in current model is torch.Size([768, 3072]).
	size mismatch for mono_encoder.blocks.0.mlp.fc2.bias: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.0.ls2.gamma: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.1.norm1.weight: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.1.norm1.bias: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.1.attn.qkv.weight: copying a param with shape torch.Size([3072, 1024]) from checkpoint, the shape in current model is torch.Size([2304, 768]).
	size mismatch for mono_encoder.blocks.1.attn.qkv.bias: copying a param with shape torch.Size([3072]) from checkpoint, the shape in current model is torch.Size([2304]).
	size mismatch for mono_encoder.blocks.1.attn.proj.weight: copying a param with shape torch.Size([1024, 1024]) from checkpoint, the shape in current model is torch.Size([768, 768]).
	size mismatch for mono_encoder.blocks.1.attn.proj.bias: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.1.ls1.gamma: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.1.norm2.weight: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.1.norm2.bias: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.1.mlp.fc1.weight: copying a param with shape torch.Size([4096, 1024]) from checkpoint, the shape in current model is torch.Size([3072, 768]).
	size mismatch for mono_encoder.blocks.1.mlp.fc1.bias: copying a param with shape torch.Size([4096]) from checkpoint, the shape in current model is torch.Size([3072]).
	size mismatch for mono_encoder.blocks.1.mlp.fc2.weight: copying a param with shape torch.Size([1024, 4096]) from checkpoint, the shape in current model is torch.Size([768, 3072]).
	size mismatch for mono_encoder.blocks.1.mlp.fc2.bias: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.1.ls2.gamma: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.2.norm1.weight: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.2.norm1.bias: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.2.attn.qkv.weight: copying a param with shape torch.Size([3072, 1024]) from checkpoint, the shape in current model is torch.Size([2304, 768]).
	size mismatch for mono_encoder.blocks.2.attn.qkv.bias: copying a param with shape torch.Size([3072]) from checkpoint, the shape in current model is torch.Size([2304]).
	size mismatch for mono_encoder.blocks.2.attn.proj.weight: copying a param with shape torch.Size([1024, 1024]) from checkpoint, the shape in current model is torch.Size([768, 768]).
	size mismatch for mono_encoder.blocks.2.attn.proj.bias: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.2.ls1.gamma: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.2.norm2.weight: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.2.norm2.bias: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.2.mlp.fc1.weight: copying a param with shape torch.Size([4096, 1024]) from checkpoint, the shape in current model is torch.Size([3072, 768]).
	size mismatch for mono_encoder.blocks.2.mlp.fc1.bias: copying a param with shape torch.Size([4096]) from checkpoint, the shape in current model is torch.Size([3072]).
	size mismatch for mono_encoder.blocks.2.mlp.fc2.weight: copying a param with shape torch.Size([1024, 4096]) from checkpoint, the shape in current model is torch.Size([768, 3072]).
	size mismatch for mono_encoder.blocks.2.mlp.fc2.bias: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.2.ls2.gamma: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.3.norm1.weight: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.3.norm1.bias: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.3.attn.qkv.weight: copying a param with shape torch.Size([3072, 1024]) from checkpoint, the shape in current model is torch.Size([2304, 768]).
	size mismatch for mono_encoder.blocks.3.attn.qkv.bias: copying a param with shape torch.Size([3072]) from checkpoint, the shape in current model is torch.Size([2304]).
	size mismatch for mono_encoder.blocks.3.attn.proj.weight: copying a param with shape torch.Size([1024, 1024]) from checkpoint, the shape in current model is torch.Size([768, 768]).
	size mismatch for mono_encoder.blocks.3.attn.proj.bias: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.3.ls1.gamma: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.3.norm2.weight: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.3.norm2.bias: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.3.mlp.fc1.weight: copying a param with shape torch.Size([4096, 1024]) from checkpoint, the shape in current model is torch.Size([3072, 768]).
	size mismatch for mono_encoder.blocks.3.mlp.fc1.bias: copying a param with shape torch.Size([4096]) from checkpoint, the shape in current model is torch.Size([3072]).
	size mismatch for mono_encoder.blocks.3.mlp.fc2.weight: copying a param with shape torch.Size([1024, 4096]) from checkpoint, the shape in current model is torch.Size([768, 3072]).
	size mismatch for mono_encoder.blocks.3.mlp.fc2.bias: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.3.ls2.gamma: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.4.norm1.weight: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.4.norm1.bias: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.4.attn.qkv.weight: copying a param with shape torch.Size([3072, 1024]) from checkpoint, the shape in current model is torch.Size([2304, 768]).
	size mismatch for mono_encoder.blocks.4.attn.qkv.bias: copying a param with shape torch.Size([3072]) from checkpoint, the shape in current model is torch.Size([2304]).
	size mismatch for mono_encoder.blocks.4.attn.proj.weight: copying a param with shape torch.Size([1024, 1024]) from checkpoint, the shape in current model is torch.Size([768, 768]).
	size mismatch for mono_encoder.blocks.4.attn.proj.bias: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.4.ls1.gamma: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.4.norm2.weight: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.4.norm2.bias: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.4.mlp.fc1.weight: copying a param with shape torch.Size([4096, 1024]) from checkpoint, the shape in current model is torch.Size([3072, 768]).
	size mismatch for mono_encoder.blocks.4.mlp.fc1.bias: copying a param with shape torch.Size([4096]) from checkpoint, the shape in current model is torch.Size([3072]).
	size mismatch for mono_encoder.blocks.4.mlp.fc2.weight: copying a param with shape torch.Size([1024, 4096]) from checkpoint, the shape in current model is torch.Size([768, 3072]).
	size mismatch for mono_encoder.blocks.4.mlp.fc2.bias: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.4.ls2.gamma: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.5.norm1.weight: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.5.norm1.bias: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.5.attn.qkv.weight: copying a param with shape torch.Size([3072, 1024]) from checkpoint, the shape in current model is torch.Size([2304, 768]).
	size mismatch for mono_encoder.blocks.5.attn.qkv.bias: copying a param with shape torch.Size([3072]) from checkpoint, the shape in current model is torch.Size([2304]).
	size mismatch for mono_encoder.blocks.5.attn.proj.weight: copying a param with shape torch.Size([1024, 1024]) from checkpoint, the shape in current model is torch.Size([768, 768]).
	size mismatch for mono_encoder.blocks.5.attn.proj.bias: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.5.ls1.gamma: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.5.norm2.weight: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.5.norm2.bias: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.5.mlp.fc1.weight: copying a param with shape torch.Size([4096, 1024]) from checkpoint, the shape in current model is torch.Size([3072, 768]).
	size mismatch for mono_encoder.blocks.5.mlp.fc1.bias: copying a param with shape torch.Size([4096]) from checkpoint, the shape in current model is torch.Size([3072]).
	size mismatch for mono_encoder.blocks.5.mlp.fc2.weight: copying a param with shape torch.Size([1024, 4096]) from checkpoint, the shape in current model is torch.Size([768, 3072]).
	size mismatch for mono_encoder.blocks.5.mlp.fc2.bias: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.5.ls2.gamma: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.6.norm1.weight: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.6.norm1.bias: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.6.attn.qkv.weight: copying a param with shape torch.Size([3072, 1024]) from checkpoint, the shape in current model is torch.Size([2304, 768]).
	size mismatch for mono_encoder.blocks.6.attn.qkv.bias: copying a param with shape torch.Size([3072]) from checkpoint, the shape in current model is torch.Size([2304]).
	size mismatch for mono_encoder.blocks.6.attn.proj.weight: copying a param with shape torch.Size([1024, 1024]) from checkpoint, the shape in current model is torch.Size([768, 768]).
	size mismatch for mono_encoder.blocks.6.attn.proj.bias: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.6.ls1.gamma: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.6.norm2.weight: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.6.norm2.bias: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.6.mlp.fc1.weight: copying a param with shape torch.Size([4096, 1024]) from checkpoint, the shape in current model is torch.Size([3072, 768]).
	size mismatch for mono_encoder.blocks.6.mlp.fc1.bias: copying a param with shape torch.Size([4096]) from checkpoint, the shape in current model is torch.Size([3072]).
	size mismatch for mono_encoder.blocks.6.mlp.fc2.weight: copying a param with shape torch.Size([1024, 4096]) from checkpoint, the shape in current model is torch.Size([768, 3072]).
	size mismatch for mono_encoder.blocks.6.mlp.fc2.bias: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.6.ls2.gamma: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.7.norm1.weight: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.7.norm1.bias: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.7.attn.qkv.weight: copying a param with shape torch.Size([3072, 1024]) from checkpoint, the shape in current model is torch.Size([2304, 768]).
	size mismatch for mono_encoder.blocks.7.attn.qkv.bias: copying a param with shape torch.Size([3072]) from checkpoint, the shape in current model is torch.Size([2304]).
	size mismatch for mono_encoder.blocks.7.attn.proj.weight: copying a param with shape torch.Size([1024, 1024]) from checkpoint, the shape in current model is torch.Size([768, 768]).
	size mismatch for mono_encoder.blocks.7.attn.proj.bias: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.7.ls1.gamma: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.7.norm2.weight: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.7.norm2.bias: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.7.mlp.fc1.weight: copying a param with shape torch.Size([4096, 1024]) from checkpoint, the shape in current model is torch.Size([3072, 768]).
	size mismatch for mono_encoder.blocks.7.mlp.fc1.bias: copying a param with shape torch.Size([4096]) from checkpoint, the shape in current model is torch.Size([3072]).
	size mismatch for mono_encoder.blocks.7.mlp.fc2.weight: copying a param with shape torch.Size([1024, 4096]) from checkpoint, the shape in current model is torch.Size([768, 3072]).
	size mismatch for mono_encoder.blocks.7.mlp.fc2.bias: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.7.ls2.gamma: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.8.norm1.weight: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.8.norm1.bias: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.8.attn.qkv.weight: copying a param with shape torch.Size([3072, 1024]) from checkpoint, the shape in current model is torch.Size([2304, 768]).
	size mismatch for mono_encoder.blocks.8.attn.qkv.bias: copying a param with shape torch.Size([3072]) from checkpoint, the shape in current model is torch.Size([2304]).
	size mismatch for mono_encoder.blocks.8.attn.proj.weight: copying a param with shape torch.Size([1024, 1024]) from checkpoint, the shape in current model is torch.Size([768, 768]).
	size mismatch for mono_encoder.blocks.8.attn.proj.bias: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.8.ls1.gamma: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.8.norm2.weight: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.8.norm2.bias: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.8.mlp.fc1.weight: copying a param with shape torch.Size([4096, 1024]) from checkpoint, the shape in current model is torch.Size([3072, 768]).
	size mismatch for mono_encoder.blocks.8.mlp.fc1.bias: copying a param with shape torch.Size([4096]) from checkpoint, the shape in current model is torch.Size([3072]).
	size mismatch for mono_encoder.blocks.8.mlp.fc2.weight: copying a param with shape torch.Size([1024, 4096]) from checkpoint, the shape in current model is torch.Size([768, 3072]).
	size mismatch for mono_encoder.blocks.8.mlp.fc2.bias: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.8.ls2.gamma: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.9.norm1.weight: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.9.norm1.bias: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.9.attn.qkv.weight: copying a param with shape torch.Size([3072, 1024]) from checkpoint, the shape in current model is torch.Size([2304, 768]).
	size mismatch for mono_encoder.blocks.9.attn.qkv.bias: copying a param with shape torch.Size([3072]) from checkpoint, the shape in current model is torch.Size([2304]).
	size mismatch for mono_encoder.blocks.9.attn.proj.weight: copying a param with shape torch.Size([1024, 1024]) from checkpoint, the shape in current model is torch.Size([768, 768]).
	size mismatch for mono_encoder.blocks.9.attn.proj.bias: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.9.ls1.gamma: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.9.norm2.weight: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.9.norm2.bias: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.9.mlp.fc1.weight: copying a param with shape torch.Size([4096, 1024]) from checkpoint, the shape in current model is torch.Size([3072, 768]).
	size mismatch for mono_encoder.blocks.9.mlp.fc1.bias: copying a param with shape torch.Size([4096]) from checkpoint, the shape in current model is torch.Size([3072]).
	size mismatch for mono_encoder.blocks.9.mlp.fc2.weight: copying a param with shape torch.Size([1024, 4096]) from checkpoint, the shape in current model is torch.Size([768, 3072]).
	size mismatch for mono_encoder.blocks.9.mlp.fc2.bias: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.9.ls2.gamma: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.10.norm1.weight: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.10.norm1.bias: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.10.attn.qkv.weight: copying a param with shape torch.Size([3072, 1024]) from checkpoint, the shape in current model is torch.Size([2304, 768]).
	size mismatch for mono_encoder.blocks.10.attn.qkv.bias: copying a param with shape torch.Size([3072]) from checkpoint, the shape in current model is torch.Size([2304]).
	size mismatch for mono_encoder.blocks.10.attn.proj.weight: copying a param with shape torch.Size([1024, 1024]) from checkpoint, the shape in current model is torch.Size([768, 768]).
	size mismatch for mono_encoder.blocks.10.attn.proj.bias: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.10.ls1.gamma: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.10.norm2.weight: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.10.norm2.bias: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.10.mlp.fc1.weight: copying a param with shape torch.Size([4096, 1024]) from checkpoint, the shape in current model is torch.Size([3072, 768]).
	size mismatch for mono_encoder.blocks.10.mlp.fc1.bias: copying a param with shape torch.Size([4096]) from checkpoint, the shape in current model is torch.Size([3072]).
	size mismatch for mono_encoder.blocks.10.mlp.fc2.weight: copying a param with shape torch.Size([1024, 4096]) from checkpoint, the shape in current model is torch.Size([768, 3072]).
	size mismatch for mono_encoder.blocks.10.mlp.fc2.bias: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.10.ls2.gamma: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.11.norm1.weight: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.11.norm1.bias: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.11.attn.qkv.weight: copying a param with shape torch.Size([3072, 1024]) from checkpoint, the shape in current model is torch.Size([2304, 768]).
	size mismatch for mono_encoder.blocks.11.attn.qkv.bias: copying a param with shape torch.Size([3072]) from checkpoint, the shape in current model is torch.Size([2304]).
	size mismatch for mono_encoder.blocks.11.attn.proj.weight: copying a param with shape torch.Size([1024, 1024]) from checkpoint, the shape in current model is torch.Size([768, 768]).
	size mismatch for mono_encoder.blocks.11.attn.proj.bias: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.11.ls1.gamma: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.11.norm2.weight: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.11.norm2.bias: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.11.mlp.fc1.weight: copying a param with shape torch.Size([4096, 1024]) from checkpoint, the shape in current model is torch.Size([3072, 768]).
	size mismatch for mono_encoder.blocks.11.mlp.fc1.bias: copying a param with shape torch.Size([4096]) from checkpoint, the shape in current model is torch.Size([3072]).
	size mismatch for mono_encoder.blocks.11.mlp.fc2.weight: copying a param with shape torch.Size([1024, 4096]) from checkpoint, the shape in current model is torch.Size([768, 3072]).
	size mismatch for mono_encoder.blocks.11.mlp.fc2.bias: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.11.ls2.gamma: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.norm.weight: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.norm.bias: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_decoder.projects.0.weight: copying a param with shape torch.Size([256, 1024, 1, 1]) from checkpoint, the shape in current model is torch.Size([96, 768, 1, 1]).
	size mismatch for mono_decoder.projects.0.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([96]).
	size mismatch for mono_decoder.projects.1.weight: copying a param with shape torch.Size([512, 1024, 1, 1]) from checkpoint, the shape in current model is torch.Size([192, 768, 1, 1]).
	size mismatch for mono_decoder.projects.1.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([192]).
	size mismatch for mono_decoder.projects.2.weight: copying a param with shape torch.Size([1024, 1024, 1, 1]) from checkpoint, the shape in current model is torch.Size([384, 768, 1, 1]).
	size mismatch for mono_decoder.projects.2.bias: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([384]).
	size mismatch for mono_decoder.projects.3.weight: copying a param with shape torch.Size([1024, 1024, 1, 1]) from checkpoint, the shape in current model is torch.Size([768, 768, 1, 1]).
	size mismatch for mono_decoder.projects.3.bias: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_decoder.resize_layers.0.weight: copying a param with shape torch.Size([256, 256, 4, 4]) from checkpoint, the shape in current model is torch.Size([96, 96, 4, 4]).
	size mismatch for mono_decoder.resize_layers.0.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([96]).
	size mismatch for mono_decoder.resize_layers.1.weight: copying a param with shape torch.Size([512, 512, 2, 2]) from checkpoint, the shape in current model is torch.Size([192, 192, 2, 2]).
	size mismatch for mono_decoder.resize_layers.1.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([192]).
	size mismatch for mono_decoder.resize_layers.3.weight: copying a param with shape torch.Size([1024, 1024, 3, 3]) from checkpoint, the shape in current model is torch.Size([768, 768, 3, 3]).
	size mismatch for mono_decoder.resize_layers.3.bias: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_decoder.scratch.layer1_rn.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 96, 3, 3]).
	size mismatch for mono_decoder.scratch.layer2_rn.weight: copying a param with shape torch.Size([256, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 192, 3, 3]).
	size mismatch for mono_decoder.scratch.layer3_rn.weight: copying a param with shape torch.Size([256, 1024, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 384, 3, 3]).
	size mismatch for mono_decoder.scratch.layer4_rn.weight: copying a param with shape torch.Size([256, 1024, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 768, 3, 3]).
	size mismatch for mono_decoder.scratch.refinenet1.out_conv.weight: copying a param with shape torch.Size([256, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([128, 128, 1, 1]).
	size mismatch for mono_decoder.scratch.refinenet1.out_conv.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for mono_decoder.scratch.refinenet1.resConfUnit1.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 128, 3, 3]).
	size mismatch for mono_decoder.scratch.refinenet1.resConfUnit1.conv1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for mono_decoder.scratch.refinenet1.resConfUnit1.conv2.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 128, 3, 3]).
	size mismatch for mono_decoder.scratch.refinenet1.resConfUnit1.conv2.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for mono_decoder.scratch.refinenet1.resConfUnit2.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 128, 3, 3]).
	size mismatch for mono_decoder.scratch.refinenet1.resConfUnit2.conv1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for mono_decoder.scratch.refinenet1.resConfUnit2.conv2.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 128, 3, 3]).
	size mismatch for mono_decoder.scratch.refinenet1.resConfUnit2.conv2.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for mono_decoder.scratch.refinenet2.out_conv.weight: copying a param with shape torch.Size([256, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([128, 128, 1, 1]).
	size mismatch for mono_decoder.scratch.refinenet2.out_conv.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for mono_decoder.scratch.refinenet2.resConfUnit1.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 128, 3, 3]).
	size mismatch for mono_decoder.scratch.refinenet2.resConfUnit1.conv1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for mono_decoder.scratch.refinenet2.resConfUnit1.conv2.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 128, 3, 3]).
	size mismatch for mono_decoder.scratch.refinenet2.resConfUnit1.conv2.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for mono_decoder.scratch.refinenet2.resConfUnit2.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 128, 3, 3]).
	size mismatch for mono_decoder.scratch.refinenet2.resConfUnit2.conv1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for mono_decoder.scratch.refinenet2.resConfUnit2.conv2.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 128, 3, 3]).
	size mismatch for mono_decoder.scratch.refinenet2.resConfUnit2.conv2.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for mono_decoder.scratch.refinenet3.out_conv.weight: copying a param with shape torch.Size([256, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([128, 128, 1, 1]).
	size mismatch for mono_decoder.scratch.refinenet3.out_conv.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for mono_decoder.scratch.refinenet3.resConfUnit1.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 128, 3, 3]).
	size mismatch for mono_decoder.scratch.refinenet3.resConfUnit1.conv1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for mono_decoder.scratch.refinenet3.resConfUnit1.conv2.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 128, 3, 3]).
	size mismatch for mono_decoder.scratch.refinenet3.resConfUnit1.conv2.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for mono_decoder.scratch.refinenet3.resConfUnit2.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 128, 3, 3]).
	size mismatch for mono_decoder.scratch.refinenet3.resConfUnit2.conv1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for mono_decoder.scratch.refinenet3.resConfUnit2.conv2.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 128, 3, 3]).
	size mismatch for mono_decoder.scratch.refinenet3.resConfUnit2.conv2.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for mono_decoder.scratch.refinenet4.out_conv.weight: copying a param with shape torch.Size([256, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([128, 128, 1, 1]).
	size mismatch for mono_decoder.scratch.refinenet4.out_conv.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for mono_decoder.scratch.refinenet4.resConfUnit1.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 128, 3, 3]).
	size mismatch for mono_decoder.scratch.refinenet4.resConfUnit1.conv1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for mono_decoder.scratch.refinenet4.resConfUnit1.conv2.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 128, 3, 3]).
	size mismatch for mono_decoder.scratch.refinenet4.resConfUnit1.conv2.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for mono_decoder.scratch.refinenet4.resConfUnit2.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 128, 3, 3]).
	size mismatch for mono_decoder.scratch.refinenet4.resConfUnit2.conv1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for mono_decoder.scratch.refinenet4.resConfUnit2.conv2.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 128, 3, 3]).
	size mismatch for mono_decoder.scratch.refinenet4.resConfUnit2.conv2.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for mono_decoder.scratch.output_conv1.weight: copying a param with shape torch.Size([128, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 128, 3, 3]).
	size mismatch for mono_decoder.scratch.output_conv1.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([64]).
	size mismatch for mono_decoder.scratch.output_conv2.0.weight: copying a param with shape torch.Size([32, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([32, 64, 3, 3]).
	size mismatch for feat_decoder.projects.0.weight: copying a param with shape torch.Size([256, 1024, 1, 1]) from checkpoint, the shape in current model is torch.Size([96, 768, 1, 1]).
	size mismatch for feat_decoder.projects.0.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([96]).
	size mismatch for feat_decoder.projects.1.weight: copying a param with shape torch.Size([512, 1024, 1, 1]) from checkpoint, the shape in current model is torch.Size([192, 768, 1, 1]).
	size mismatch for feat_decoder.projects.1.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([192]).
	size mismatch for feat_decoder.projects.2.weight: copying a param with shape torch.Size([1024, 1024, 1, 1]) from checkpoint, the shape in current model is torch.Size([384, 768, 1, 1]).
	size mismatch for feat_decoder.projects.2.bias: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([384]).
	size mismatch for feat_decoder.projects.3.weight: copying a param with shape torch.Size([1024, 1024, 1, 1]) from checkpoint, the shape in current model is torch.Size([768, 768, 1, 1]).
	size mismatch for feat_decoder.projects.3.bias: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for feat_decoder.resize_layers.0.weight: copying a param with shape torch.Size([256, 256, 4, 4]) from checkpoint, the shape in current model is torch.Size([96, 96, 4, 4]).
	size mismatch for feat_decoder.resize_layers.0.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([96]).
	size mismatch for feat_decoder.resize_layers.1.weight: copying a param with shape torch.Size([512, 512, 2, 2]) from checkpoint, the shape in current model is torch.Size([192, 192, 2, 2]).
	size mismatch for feat_decoder.resize_layers.1.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([192]).
	size mismatch for feat_decoder.resize_layers.3.weight: copying a param with shape torch.Size([1024, 1024, 3, 3]) from checkpoint, the shape in current model is torch.Size([768, 768, 3, 3]).
	size mismatch for feat_decoder.resize_layers.3.bias: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for feat_decoder.scratch.layer1_rn.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 96, 3, 3]).
	size mismatch for feat_decoder.scratch.layer2_rn.weight: copying a param with shape torch.Size([256, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 192, 3, 3]).
	size mismatch for feat_decoder.scratch.layer3_rn.weight: copying a param with shape torch.Size([256, 1024, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 384, 3, 3]).
	size mismatch for feat_decoder.scratch.layer4_rn.weight: copying a param with shape torch.Size([256, 1024, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 768, 3, 3]).
	size mismatch for feat_decoder.scratch.refinenet1.out_conv.weight: copying a param with shape torch.Size([256, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([128, 128, 1, 1]).
	size mismatch for feat_decoder.scratch.refinenet1.out_conv.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for feat_decoder.scratch.refinenet1.resConfUnit1.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 128, 3, 3]).
	size mismatch for feat_decoder.scratch.refinenet1.resConfUnit1.conv1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for feat_decoder.scratch.refinenet1.resConfUnit1.conv2.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 128, 3, 3]).
	size mismatch for feat_decoder.scratch.refinenet1.resConfUnit1.conv2.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for feat_decoder.scratch.refinenet1.resConfUnit2.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 128, 3, 3]).
	size mismatch for feat_decoder.scratch.refinenet1.resConfUnit2.conv1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for feat_decoder.scratch.refinenet1.resConfUnit2.conv2.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 128, 3, 3]).
	size mismatch for feat_decoder.scratch.refinenet1.resConfUnit2.conv2.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for feat_decoder.scratch.refinenet2.out_conv.weight: copying a param with shape torch.Size([256, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([128, 128, 1, 1]).
	size mismatch for feat_decoder.scratch.refinenet2.out_conv.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for feat_decoder.scratch.refinenet2.resConfUnit1.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 128, 3, 3]).
	size mismatch for feat_decoder.scratch.refinenet2.resConfUnit1.conv1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for feat_decoder.scratch.refinenet2.resConfUnit1.conv2.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 128, 3, 3]).
	size mismatch for feat_decoder.scratch.refinenet2.resConfUnit1.conv2.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for feat_decoder.scratch.refinenet2.resConfUnit2.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 128, 3, 3]).
	size mismatch for feat_decoder.scratch.refinenet2.resConfUnit2.conv1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for feat_decoder.scratch.refinenet2.resConfUnit2.conv2.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 128, 3, 3]).
	size mismatch for feat_decoder.scratch.refinenet2.resConfUnit2.conv2.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for feat_decoder.scratch.refinenet3.out_conv.weight: copying a param with shape torch.Size([256, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([128, 128, 1, 1]).
	size mismatch for feat_decoder.scratch.refinenet3.out_conv.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for feat_decoder.scratch.refinenet3.resConfUnit1.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 128, 3, 3]).
	size mismatch for feat_decoder.scratch.refinenet3.resConfUnit1.conv1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for feat_decoder.scratch.refinenet3.resConfUnit1.conv2.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 128, 3, 3]).
	size mismatch for feat_decoder.scratch.refinenet3.resConfUnit1.conv2.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for feat_decoder.scratch.refinenet3.resConfUnit2.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 128, 3, 3]).
	size mismatch for feat_decoder.scratch.refinenet3.resConfUnit2.conv1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for feat_decoder.scratch.refinenet3.resConfUnit2.conv2.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 128, 3, 3]).
	size mismatch for feat_decoder.scratch.refinenet3.resConfUnit2.conv2.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for feat_decoder.scratch.refinenet4.out_conv.weight: copying a param with shape torch.Size([256, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([128, 128, 1, 1]).
	size mismatch for feat_decoder.scratch.refinenet4.out_conv.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for feat_decoder.scratch.refinenet4.resConfUnit1.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 128, 3, 3]).
	size mismatch for feat_decoder.scratch.refinenet4.resConfUnit1.conv1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for feat_decoder.scratch.refinenet4.resConfUnit1.conv2.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 128, 3, 3]).
	size mismatch for feat_decoder.scratch.refinenet4.resConfUnit1.conv2.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for feat_decoder.scratch.refinenet4.resConfUnit2.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 128, 3, 3]).
	size mismatch for feat_decoder.scratch.refinenet4.resConfUnit2.conv1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for feat_decoder.scratch.refinenet4.resConfUnit2.conv2.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 128, 3, 3]).
	size mismatch for feat_decoder.scratch.refinenet4.resConfUnit2.conv2.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([128]).

Set the environment variable HYDRA_FULL_ERROR=1 for a complete stack trace.
Error executing job with overrides: []
Error executing job with overrides: []
Traceback (most recent call last):
  File "train_whu.py", line 119, in main
    model.load_state_dict(ckpt, strict=True)
  File "/home/s0214/.conda/envs/monster/lib/python3.8/site-packages/torch/nn/modules/module.py", line 2152, in load_state_dict
    raise RuntimeError('Error(s) in loading state_dict for {}:\n\t{}'.format(
RuntimeError: Error(s) in loading state_dict for Monster:
	Unexpected key(s) in state_dict: "mono_encoder.blocks.12.norm1.weight", "mono_encoder.blocks.12.norm1.bias", "mono_encoder.blocks.12.attn.qkv.weight", "mono_encoder.blocks.12.attn.qkv.bias", "mono_encoder.blocks.12.attn.proj.weight", "mono_encoder.blocks.12.attn.proj.bias", "mono_encoder.blocks.12.ls1.gamma", "mono_encoder.blocks.12.norm2.weight", "mono_encoder.blocks.12.norm2.bias", "mono_encoder.blocks.12.mlp.fc1.weight", "mono_encoder.blocks.12.mlp.fc1.bias", "mono_encoder.blocks.12.mlp.fc2.weight", "mono_encoder.blocks.12.mlp.fc2.bias", "mono_encoder.blocks.12.ls2.gamma", "mono_encoder.blocks.13.norm1.weight", "mono_encoder.blocks.13.norm1.bias", "mono_encoder.blocks.13.attn.qkv.weight", "mono_encoder.blocks.13.attn.qkv.bias", "mono_encoder.blocks.13.attn.proj.weight", "mono_encoder.blocks.13.attn.proj.bias", "mono_encoder.blocks.13.ls1.gamma", "mono_encoder.blocks.13.norm2.weight", "mono_encoder.blocks.13.norm2.bias", "mono_encoder.blocks.13.mlp.fc1.weight", "mono_encoder.blocks.13.mlp.fc1.bias", "mono_encoder.blocks.13.mlp.fc2.weight", "mono_encoder.blocks.13.mlp.fc2.bias", "mono_encoder.blocks.13.ls2.gamma", "mono_encoder.blocks.14.norm1.weight", "mono_encoder.blocks.14.norm1.bias", "mono_encoder.blocks.14.attn.qkv.weight", "mono_encoder.blocks.14.attn.qkv.bias", "mono_encoder.blocks.14.attn.proj.weight", "mono_encoder.blocks.14.attn.proj.bias", "mono_encoder.blocks.14.ls1.gamma", "mono_encoder.blocks.14.norm2.weight", "mono_encoder.blocks.14.norm2.bias", "mono_encoder.blocks.14.mlp.fc1.weight", "mono_encoder.blocks.14.mlp.fc1.bias", "mono_encoder.blocks.14.mlp.fc2.weight", "mono_encoder.blocks.14.mlp.fc2.bias", "mono_encoder.blocks.14.ls2.gamma", "mono_encoder.blocks.15.norm1.weight", "mono_encoder.blocks.15.norm1.bias", "mono_encoder.blocks.15.attn.qkv.weight", "mono_encoder.blocks.15.attn.qkv.bias", "mono_encoder.blocks.15.attn.proj.weight", "mono_encoder.blocks.15.attn.proj.bias", "mono_encoder.blocks.15.ls1.gamma", "mono_encoder.blocks.15.norm2.weight", "mono_encoder.blocks.15.norm2.bias", "mono_encoder.blocks.15.mlp.fc1.weight", "mono_encoder.blocks.15.mlp.fc1.bias", "mono_encoder.blocks.15.mlp.fc2.weight", "mono_encoder.blocks.15.mlp.fc2.bias", "mono_encoder.blocks.15.ls2.gamma", "mono_encoder.blocks.16.norm1.weight", "mono_encoder.blocks.16.norm1.bias", "mono_encoder.blocks.16.attn.qkv.weight", "mono_encoder.blocks.16.attn.qkv.bias", "mono_encoder.blocks.16.attn.proj.weight", "mono_encoder.blocks.16.attn.proj.bias", "mono_encoder.blocks.16.ls1.gamma", "mono_encoder.blocks.16.norm2.weight", "mono_encoder.blocks.16.norm2.bias", "mono_encoder.blocks.16.mlp.fc1.weight", "mono_encoder.blocks.16.mlp.fc1.bias", "mono_encoder.blocks.16.mlp.fc2.weight", "mono_encoder.blocks.16.mlp.fc2.bias", "mono_encoder.blocks.16.ls2.gamma", "mono_encoder.blocks.17.norm1.weight", "mono_encoder.blocks.17.norm1.bias", "mono_encoder.blocks.17.attn.qkv.weight", "mono_encoder.blocks.17.attn.qkv.bias", "mono_encoder.blocks.17.attn.proj.weight", "mono_encoder.blocks.17.attn.proj.bias", "mono_encoder.blocks.17.ls1.gamma", "mono_encoder.blocks.17.norm2.weight", "mono_encoder.blocks.17.norm2.bias", "mono_encoder.blocks.17.mlp.fc1.weight", "mono_encoder.blocks.17.mlp.fc1.bias", "mono_encoder.blocks.17.mlp.fc2.weight", "mono_encoder.blocks.17.mlp.fc2.bias", "mono_encoder.blocks.17.ls2.gamma", "mono_encoder.blocks.18.norm1.weight", "mono_encoder.blocks.18.norm1.bias", "mono_encoder.blocks.18.attn.qkv.weight", "mono_encoder.blocks.18.attn.qkv.bias", "mono_encoder.blocks.18.attn.proj.weight", "mono_encoder.blocks.18.attn.proj.bias", "mono_encoder.blocks.18.ls1.gamma", "mono_encoder.blocks.18.norm2.weight", "mono_encoder.blocks.18.norm2.bias", "mono_encoder.blocks.18.mlp.fc1.weight", "mono_encoder.blocks.18.mlp.fc1.bias", "mono_encoder.blocks.18.mlp.fc2.weight", "mono_encoder.blocks.18.mlp.fc2.bias", "mono_encoder.blocks.18.ls2.gamma", "mono_encoder.blocks.19.norm1.weight", "mono_encoder.blocks.19.norm1.bias", "mono_encoder.blocks.19.attn.qkv.weight", "mono_encoder.blocks.19.attn.qkv.bias", "mono_encoder.blocks.19.attn.proj.weight", "mono_encoder.blocks.19.attn.proj.bias", "mono_encoder.blocks.19.ls1.gamma", "mono_encoder.blocks.19.norm2.weight", "mono_encoder.blocks.19.norm2.bias", "mono_encoder.blocks.19.mlp.fc1.weight", "mono_encoder.blocks.19.mlp.fc1.bias", "mono_encoder.blocks.19.mlp.fc2.weight", "mono_encoder.blocks.19.mlp.fc2.bias", "mono_encoder.blocks.19.ls2.gamma", "mono_encoder.blocks.20.norm1.weight", "mono_encoder.blocks.20.norm1.bias", "mono_encoder.blocks.20.attn.qkv.weight", "mono_encoder.blocks.20.attn.qkv.bias", "mono_encoder.blocks.20.attn.proj.weight", "mono_encoder.blocks.20.attn.proj.bias", "mono_encoder.blocks.20.ls1.gamma", "mono_encoder.blocks.20.norm2.weight", "mono_encoder.blocks.20.norm2.bias", "mono_encoder.blocks.20.mlp.fc1.weight", "mono_encoder.blocks.20.mlp.fc1.bias", "mono_encoder.blocks.20.mlp.fc2.weight", "mono_encoder.blocks.20.mlp.fc2.bias", "mono_encoder.blocks.20.ls2.gamma", "mono_encoder.blocks.21.norm1.weight", "mono_encoder.blocks.21.norm1.bias", "mono_encoder.blocks.21.attn.qkv.weight", "mono_encoder.blocks.21.attn.qkv.bias", "mono_encoder.blocks.21.attn.proj.weight", "mono_encoder.blocks.21.attn.proj.bias", "mono_encoder.blocks.21.ls1.gamma", "mono_encoder.blocks.21.norm2.weight", "mono_encoder.blocks.21.norm2.bias", "mono_encoder.blocks.21.mlp.fc1.weight", "mono_encoder.blocks.21.mlp.fc1.bias", "mono_encoder.blocks.21.mlp.fc2.weight", "mono_encoder.blocks.21.mlp.fc2.bias", "mono_encoder.blocks.21.ls2.gamma", "mono_encoder.blocks.22.norm1.weight", "mono_encoder.blocks.22.norm1.bias", "mono_encoder.blocks.22.attn.qkv.weight", "mono_encoder.blocks.22.attn.qkv.bias", "mono_encoder.blocks.22.attn.proj.weight", "mono_encoder.blocks.22.attn.proj.bias", "mono_encoder.blocks.22.ls1.gamma", "mono_encoder.blocks.22.norm2.weight", "mono_encoder.blocks.22.norm2.bias", "mono_encoder.blocks.22.mlp.fc1.weight", "mono_encoder.blocks.22.mlp.fc1.bias", "mono_encoder.blocks.22.mlp.fc2.weight", "mono_encoder.blocks.22.mlp.fc2.bias", "mono_encoder.blocks.22.ls2.gamma", "mono_encoder.blocks.23.norm1.weight", "mono_encoder.blocks.23.norm1.bias", "mono_encoder.blocks.23.attn.qkv.weight", "mono_encoder.blocks.23.attn.qkv.bias", "mono_encoder.blocks.23.attn.proj.weight", "mono_encoder.blocks.23.attn.proj.bias", "mono_encoder.blocks.23.ls1.gamma", "mono_encoder.blocks.23.norm2.weight", "mono_encoder.blocks.23.norm2.bias", "mono_encoder.blocks.23.mlp.fc1.weight", "mono_encoder.blocks.23.mlp.fc1.bias", "mono_encoder.blocks.23.mlp.fc2.weight", "mono_encoder.blocks.23.mlp.fc2.bias", "mono_encoder.blocks.23.ls2.gamma". 
	size mismatch for feat_transfer.conv4x.0.weight: copying a param with shape torch.Size([48, 304, 5, 5]) from checkpoint, the shape in current model is torch.Size([48, 176, 5, 5]).
	size mismatch for feat_transfer.conv8x.0.weight: copying a param with shape torch.Size([64, 320, 5, 5]) from checkpoint, the shape in current model is torch.Size([64, 192, 5, 5]).
	size mismatch for feat_transfer.conv16x.0.weight: copying a param with shape torch.Size([192, 448, 5, 5]) from checkpoint, the shape in current model is torch.Size([192, 320, 5, 5]).
	size mismatch for feat_transfer.conv32x.0.weight: copying a param with shape torch.Size([160, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([160, 128, 3, 3]).
	size mismatch for feat_transfer.res_16x.weight: copying a param with shape torch.Size([192, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([192, 128, 1, 1]).
	size mismatch for feat_transfer.res_8x.weight: copying a param with shape torch.Size([64, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([64, 128, 1, 1]).
	size mismatch for feat_transfer.res_4x.weight: copying a param with shape torch.Size([48, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([48, 128, 1, 1]).
	size mismatch for feat_transfer_cnet.res_16x.weight: copying a param with shape torch.Size([128, 448, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 320, 3, 3]).
	size mismatch for feat_transfer_cnet.res_8x.weight: copying a param with shape torch.Size([128, 352, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 224, 3, 3]).
	size mismatch for feat_transfer_cnet.res_4x.weight: copying a param with shape torch.Size([128, 304, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 176, 3, 3]).
	size mismatch for mono_encoder.cls_token: copying a param with shape torch.Size([1, 1, 1024]) from checkpoint, the shape in current model is torch.Size([1, 1, 768]).
	size mismatch for mono_encoder.pos_embed: copying a param with shape torch.Size([1, 1370, 1024]) from checkpoint, the shape in current model is torch.Size([1, 1370, 768]).
	size mismatch for mono_encoder.mask_token: copying a param with shape torch.Size([1, 1024]) from checkpoint, the shape in current model is torch.Size([1, 768]).
	size mismatch for mono_encoder.patch_embed.proj.weight: copying a param with shape torch.Size([1024, 3, 14, 14]) from checkpoint, the shape in current model is torch.Size([768, 3, 14, 14]).
	size mismatch for mono_encoder.patch_embed.proj.bias: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.0.norm1.weight: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.0.norm1.bias: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.0.attn.qkv.weight: copying a param with shape torch.Size([3072, 1024]) from checkpoint, the shape in current model is torch.Size([2304, 768]).
	size mismatch for mono_encoder.blocks.0.attn.qkv.bias: copying a param with shape torch.Size([3072]) from checkpoint, the shape in current model is torch.Size([2304]).
	size mismatch for mono_encoder.blocks.0.attn.proj.weight: copying a param with shape torch.Size([1024, 1024]) from checkpoint, the shape in current model is torch.Size([768, 768]).
	size mismatch for mono_encoder.blocks.0.attn.proj.bias: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.0.ls1.gamma: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.0.norm2.weight: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.0.norm2.bias: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.0.mlp.fc1.weight: copying a param with shape torch.Size([4096, 1024]) from checkpoint, the shape in current model is torch.Size([3072, 768]).
	size mismatch for mono_encoder.blocks.0.mlp.fc1.bias: copying a param with shape torch.Size([4096]) from checkpoint, the shape in current model is torch.Size([3072]).
	size mismatch for mono_encoder.blocks.0.mlp.fc2.weight: copying a param with shape torch.Size([1024, 4096]) from checkpoint, the shape in current model is torch.Size([768, 3072]).
	size mismatch for mono_encoder.blocks.0.mlp.fc2.bias: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.0.ls2.gamma: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.1.norm1.weight: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.1.norm1.bias: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.1.attn.qkv.weight: copying a param with shape torch.Size([3072, 1024]) from checkpoint, the shape in current model is torch.Size([2304, 768]).
	size mismatch for mono_encoder.blocks.1.attn.qkv.bias: copying a param with shape torch.Size([3072]) from checkpoint, the shape in current model is torch.Size([2304]).
	size mismatch for mono_encoder.blocks.1.attn.proj.weight: copying a param with shape torch.Size([1024, 1024]) from checkpoint, the shape in current model is torch.Size([768, 768]).
	size mismatch for mono_encoder.blocks.1.attn.proj.bias: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.1.ls1.gamma: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.1.norm2.weight: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.1.norm2.bias: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.1.mlp.fc1.weight: copying a param with shape torch.Size([4096, 1024]) from checkpoint, the shape in current model is torch.Size([3072, 768]).
	size mismatch for mono_encoder.blocks.1.mlp.fc1.bias: copying a param with shape torch.Size([4096]) from checkpoint, the shape in current model is torch.Size([3072]).
	size mismatch for mono_encoder.blocks.1.mlp.fc2.weight: copying a param with shape torch.Size([1024, 4096]) from checkpoint, the shape in current model is torch.Size([768, 3072]).
	size mismatch for mono_encoder.blocks.1.mlp.fc2.bias: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.1.ls2.gamma: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.2.norm1.weight: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.2.norm1.bias: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.2.attn.qkv.weight: copying a param with shape torch.Size([3072, 1024]) from checkpoint, the shape in current model is torch.Size([2304, 768]).
	size mismatch for mono_encoder.blocks.2.attn.qkv.bias: copying a param with shape torch.Size([3072]) from checkpoint, the shape in current model is torch.Size([2304]).
	size mismatch for mono_encoder.blocks.2.attn.proj.weight: copying a param with shape torch.Size([1024, 1024]) from checkpoint, the shape in current model is torch.Size([768, 768]).
	size mismatch for mono_encoder.blocks.2.attn.proj.bias: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.2.ls1.gamma: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.2.norm2.weight: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.2.norm2.bias: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.2.mlp.fc1.weight: copying a param with shape torch.Size([4096, 1024]) from checkpoint, the shape in current model is torch.Size([3072, 768]).
	size mismatch for mono_encoder.blocks.2.mlp.fc1.bias: copying a param with shape torch.Size([4096]) from checkpoint, the shape in current model is torch.Size([3072]).
	size mismatch for mono_encoder.blocks.2.mlp.fc2.weight: copying a param with shape torch.Size([1024, 4096]) from checkpoint, the shape in current model is torch.Size([768, 3072]).
	size mismatch for mono_encoder.blocks.2.mlp.fc2.bias: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.2.ls2.gamma: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.3.norm1.weight: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.3.norm1.bias: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.3.attn.qkv.weight: copying a param with shape torch.Size([3072, 1024]) from checkpoint, the shape in current model is torch.Size([2304, 768]).
	size mismatch for mono_encoder.blocks.3.attn.qkv.bias: copying a param with shape torch.Size([3072]) from checkpoint, the shape in current model is torch.Size([2304]).
	size mismatch for mono_encoder.blocks.3.attn.proj.weight: copying a param with shape torch.Size([1024, 1024]) from checkpoint, the shape in current model is torch.Size([768, 768]).
	size mismatch for mono_encoder.blocks.3.attn.proj.bias: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.3.ls1.gamma: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.3.norm2.weight: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.3.norm2.bias: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.3.mlp.fc1.weight: copying a param with shape torch.Size([4096, 1024]) from checkpoint, the shape in current model is torch.Size([3072, 768]).
	size mismatch for mono_encoder.blocks.3.mlp.fc1.bias: copying a param with shape torch.Size([4096]) from checkpoint, the shape in current model is torch.Size([3072]).
	size mismatch for mono_encoder.blocks.3.mlp.fc2.weight: copying a param with shape torch.Size([1024, 4096]) from checkpoint, the shape in current model is torch.Size([768, 3072]).
	size mismatch for mono_encoder.blocks.3.mlp.fc2.bias: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.3.ls2.gamma: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.4.norm1.weight: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.4.norm1.bias: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.4.attn.qkv.weight: copying a param with shape torch.Size([3072, 1024]) from checkpoint, the shape in current model is torch.Size([2304, 768]).
	size mismatch for mono_encoder.blocks.4.attn.qkv.bias: copying a param with shape torch.Size([3072]) from checkpoint, the shape in current model is torch.Size([2304]).
	size mismatch for mono_encoder.blocks.4.attn.proj.weight: copying a param with shape torch.Size([1024, 1024]) from checkpoint, the shape in current model is torch.Size([768, 768]).
	size mismatch for mono_encoder.blocks.4.attn.proj.bias: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.4.ls1.gamma: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.4.norm2.weight: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.4.norm2.bias: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.4.mlp.fc1.weight: copying a param with shape torch.Size([4096, 1024]) from checkpoint, the shape in current model is torch.Size([3072, 768]).
	size mismatch for mono_encoder.blocks.4.mlp.fc1.bias: copying a param with shape torch.Size([4096]) from checkpoint, the shape in current model is torch.Size([3072]).
	size mismatch for mono_encoder.blocks.4.mlp.fc2.weight: copying a param with shape torch.Size([1024, 4096]) from checkpoint, the shape in current model is torch.Size([768, 3072]).
	size mismatch for mono_encoder.blocks.4.mlp.fc2.bias: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.4.ls2.gamma: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.5.norm1.weight: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.5.norm1.bias: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.5.attn.qkv.weight: copying a param with shape torch.Size([3072, 1024]) from checkpoint, the shape in current model is torch.Size([2304, 768]).
	size mismatch for mono_encoder.blocks.5.attn.qkv.bias: copying a param with shape torch.Size([3072]) from checkpoint, the shape in current model is torch.Size([2304]).
	size mismatch for mono_encoder.blocks.5.attn.proj.weight: copying a param with shape torch.Size([1024, 1024]) from checkpoint, the shape in current model is torch.Size([768, 768]).
	size mismatch for mono_encoder.blocks.5.attn.proj.bias: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.5.ls1.gamma: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.5.norm2.weight: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.5.norm2.bias: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.5.mlp.fc1.weight: copying a param with shape torch.Size([4096, 1024]) from checkpoint, the shape in current model is torch.Size([3072, 768]).
	size mismatch for mono_encoder.blocks.5.mlp.fc1.bias: copying a param with shape torch.Size([4096]) from checkpoint, the shape in current model is torch.Size([3072]).
	size mismatch for mono_encoder.blocks.5.mlp.fc2.weight: copying a param with shape torch.Size([1024, 4096]) from checkpoint, the shape in current model is torch.Size([768, 3072]).
	size mismatch for mono_encoder.blocks.5.mlp.fc2.bias: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.5.ls2.gamma: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.6.norm1.weight: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.6.norm1.bias: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.6.attn.qkv.weight: copying a param with shape torch.Size([3072, 1024]) from checkpoint, the shape in current model is torch.Size([2304, 768]).
	size mismatch for mono_encoder.blocks.6.attn.qkv.bias: copying a param with shape torch.Size([3072]) from checkpoint, the shape in current model is torch.Size([2304]).
	size mismatch for mono_encoder.blocks.6.attn.proj.weight: copying a param with shape torch.Size([1024, 1024]) from checkpoint, the shape in current model is torch.Size([768, 768]).
	size mismatch for mono_encoder.blocks.6.attn.proj.bias: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.6.ls1.gamma: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.6.norm2.weight: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.6.norm2.bias: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.6.mlp.fc1.weight: copying a param with shape torch.Size([4096, 1024]) from checkpoint, the shape in current model is torch.Size([3072, 768]).
	size mismatch for mono_encoder.blocks.6.mlp.fc1.bias: copying a param with shape torch.Size([4096]) from checkpoint, the shape in current model is torch.Size([3072]).
	size mismatch for mono_encoder.blocks.6.mlp.fc2.weight: copying a param with shape torch.Size([1024, 4096]) from checkpoint, the shape in current model is torch.Size([768, 3072]).
	size mismatch for mono_encoder.blocks.6.mlp.fc2.bias: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.6.ls2.gamma: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.7.norm1.weight: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.7.norm1.bias: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.7.attn.qkv.weight: copying a param with shape torch.Size([3072, 1024]) from checkpoint, the shape in current model is torch.Size([2304, 768]).
	size mismatch for mono_encoder.blocks.7.attn.qkv.bias: copying a param with shape torch.Size([3072]) from checkpoint, the shape in current model is torch.Size([2304]).
	size mismatch for mono_encoder.blocks.7.attn.proj.weight: copying a param with shape torch.Size([1024, 1024]) from checkpoint, the shape in current model is torch.Size([768, 768]).
	size mismatch for mono_encoder.blocks.7.attn.proj.bias: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.7.ls1.gamma: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.7.norm2.weight: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.7.norm2.bias: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.7.mlp.fc1.weight: copying a param with shape torch.Size([4096, 1024]) from checkpoint, the shape in current model is torch.Size([3072, 768]).
	size mismatch for mono_encoder.blocks.7.mlp.fc1.bias: copying a param with shape torch.Size([4096]) from checkpoint, the shape in current model is torch.Size([3072]).
	size mismatch for mono_encoder.blocks.7.mlp.fc2.weight: copying a param with shape torch.Size([1024, 4096]) from checkpoint, the shape in current model is torch.Size([768, 3072]).
	size mismatch for mono_encoder.blocks.7.mlp.fc2.bias: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.7.ls2.gamma: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.8.norm1.weight: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.8.norm1.bias: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.8.attn.qkv.weight: copying a param with shape torch.Size([3072, 1024]) from checkpoint, the shape in current model is torch.Size([2304, 768]).
	size mismatch for mono_encoder.blocks.8.attn.qkv.bias: copying a param with shape torch.Size([3072]) from checkpoint, the shape in current model is torch.Size([2304]).
	size mismatch for mono_encoder.blocks.8.attn.proj.weight: copying a param with shape torch.Size([1024, 1024]) from checkpoint, the shape in current model is torch.Size([768, 768]).
	size mismatch for mono_encoder.blocks.8.attn.proj.bias: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.8.ls1.gamma: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.8.norm2.weight: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.8.norm2.bias: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.8.mlp.fc1.weight: copying a param with shape torch.Size([4096, 1024]) from checkpoint, the shape in current model is torch.Size([3072, 768]).
	size mismatch for mono_encoder.blocks.8.mlp.fc1.bias: copying a param with shape torch.Size([4096]) from checkpoint, the shape in current model is torch.Size([3072]).
	size mismatch for mono_encoder.blocks.8.mlp.fc2.weight: copying a param with shape torch.Size([1024, 4096]) from checkpoint, the shape in current model is torch.Size([768, 3072]).
	size mismatch for mono_encoder.blocks.8.mlp.fc2.bias: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.8.ls2.gamma: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.9.norm1.weight: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.9.norm1.bias: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.9.attn.qkv.weight: copying a param with shape torch.Size([3072, 1024]) from checkpoint, the shape in current model is torch.Size([2304, 768]).
	size mismatch for mono_encoder.blocks.9.attn.qkv.bias: copying a param with shape torch.Size([3072]) from checkpoint, the shape in current model is torch.Size([2304]).
	size mismatch for mono_encoder.blocks.9.attn.proj.weight: copying a param with shape torch.Size([1024, 1024]) from checkpoint, the shape in current model is torch.Size([768, 768]).
	size mismatch for mono_encoder.blocks.9.attn.proj.bias: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.9.ls1.gamma: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.9.norm2.weight: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.9.norm2.bias: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.9.mlp.fc1.weight: copying a param with shape torch.Size([4096, 1024]) from checkpoint, the shape in current model is torch.Size([3072, 768]).
	size mismatch for mono_encoder.blocks.9.mlp.fc1.bias: copying a param with shape torch.Size([4096]) from checkpoint, the shape in current model is torch.Size([3072]).
	size mismatch for mono_encoder.blocks.9.mlp.fc2.weight: copying a param with shape torch.Size([1024, 4096]) from checkpoint, the shape in current model is torch.Size([768, 3072]).
	size mismatch for mono_encoder.blocks.9.mlp.fc2.bias: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.9.ls2.gamma: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.10.norm1.weight: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.10.norm1.bias: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.10.attn.qkv.weight: copying a param with shape torch.Size([3072, 1024]) from checkpoint, the shape in current model is torch.Size([2304, 768]).
	size mismatch for mono_encoder.blocks.10.attn.qkv.bias: copying a param with shape torch.Size([3072]) from checkpoint, the shape in current model is torch.Size([2304]).
	size mismatch for mono_encoder.blocks.10.attn.proj.weight: copying a param with shape torch.Size([1024, 1024]) from checkpoint, the shape in current model is torch.Size([768, 768]).
	size mismatch for mono_encoder.blocks.10.attn.proj.bias: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.10.ls1.gamma: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.10.norm2.weight: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.10.norm2.bias: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.10.mlp.fc1.weight: copying a param with shape torch.Size([4096, 1024]) from checkpoint, the shape in current model is torch.Size([3072, 768]).
	size mismatch for mono_encoder.blocks.10.mlp.fc1.bias: copying a param with shape torch.Size([4096]) from checkpoint, the shape in current model is torch.Size([3072]).
	size mismatch for mono_encoder.blocks.10.mlp.fc2.weight: copying a param with shape torch.Size([1024, 4096]) from checkpoint, the shape in current model is torch.Size([768, 3072]).
	size mismatch for mono_encoder.blocks.10.mlp.fc2.bias: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.10.ls2.gamma: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.11.norm1.weight: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.11.norm1.bias: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.11.attn.qkv.weight: copying a param with shape torch.Size([3072, 1024]) from checkpoint, the shape in current model is torch.Size([2304, 768]).
	size mismatch for mono_encoder.blocks.11.attn.qkv.bias: copying a param with shape torch.Size([3072]) from checkpoint, the shape in current model is torch.Size([2304]).
	size mismatch for mono_encoder.blocks.11.attn.proj.weight: copying a param with shape torch.Size([1024, 1024]) from checkpoint, the shape in current model is torch.Size([768, 768]).
	size mismatch for mono_encoder.blocks.11.attn.proj.bias: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.11.ls1.gamma: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.11.norm2.weight: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.11.norm2.bias: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.11.mlp.fc1.weight: copying a param with shape torch.Size([4096, 1024]) from checkpoint, the shape in current model is torch.Size([3072, 768]).
	size mismatch for mono_encoder.blocks.11.mlp.fc1.bias: copying a param with shape torch.Size([4096]) from checkpoint, the shape in current model is torch.Size([3072]).
	size mismatch for mono_encoder.blocks.11.mlp.fc2.weight: copying a param with shape torch.Size([1024, 4096]) from checkpoint, the shape in current model is torch.Size([768, 3072]).
	size mismatch for mono_encoder.blocks.11.mlp.fc2.bias: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.11.ls2.gamma: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.norm.weight: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.norm.bias: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_decoder.projects.0.weight: copying a param with shape torch.Size([256, 1024, 1, 1]) from checkpoint, the shape in current model is torch.Size([96, 768, 1, 1]).
	size mismatch for mono_decoder.projects.0.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([96]).
	size mismatch for mono_decoder.projects.1.weight: copying a param with shape torch.Size([512, 1024, 1, 1]) from checkpoint, the shape in current model is torch.Size([192, 768, 1, 1]).
	size mismatch for mono_decoder.projects.1.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([192]).
	size mismatch for mono_decoder.projects.2.weight: copying a param with shape torch.Size([1024, 1024, 1, 1]) from checkpoint, the shape in current model is torch.Size([384, 768, 1, 1]).
	size mismatch for mono_decoder.projects.2.bias: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([384]).
	size mismatch for mono_decoder.projects.3.weight: copying a param with shape torch.Size([1024, 1024, 1, 1]) from checkpoint, the shape in current model is torch.Size([768, 768, 1, 1]).
	size mismatch for mono_decoder.projects.3.bias: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_decoder.resize_layers.0.weight: copying a param with shape torch.Size([256, 256, 4, 4]) from checkpoint, the shape in current model is torch.Size([96, 96, 4, 4]).
	size mismatch for mono_decoder.resize_layers.0.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([96]).
	size mismatch for mono_decoder.resize_layers.1.weight: copying a param with shape torch.Size([512, 512, 2, 2]) from checkpoint, the shape in current model is torch.Size([192, 192, 2, 2]).
	size mismatch for mono_decoder.resize_layers.1.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([192]).
	size mismatch for mono_decoder.resize_layers.3.weight: copying a param with shape torch.Size([1024, 1024, 3, 3]) from checkpoint, the shape in current model is torch.Size([768, 768, 3, 3]).
	size mismatch for mono_decoder.resize_layers.3.bias: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_decoder.scratch.layer1_rn.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 96, 3, 3]).
	size mismatch for mono_decoder.scratch.layer2_rn.weight: copying a param with shape torch.Size([256, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 192, 3, 3]).
	size mismatch for mono_decoder.scratch.layer3_rn.weight: copying a param with shape torch.Size([256, 1024, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 384, 3, 3]).
	size mismatch for mono_decoder.scratch.layer4_rn.weight: copying a param with shape torch.Size([256, 1024, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 768, 3, 3]).
	size mismatch for mono_decoder.scratch.refinenet1.out_conv.weight: copying a param with shape torch.Size([256, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([128, 128, 1, 1]).
	size mismatch for mono_decoder.scratch.refinenet1.out_conv.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for mono_decoder.scratch.refinenet1.resConfUnit1.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 128, 3, 3]).
	size mismatch for mono_decoder.scratch.refinenet1.resConfUnit1.conv1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for mono_decoder.scratch.refinenet1.resConfUnit1.conv2.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 128, 3, 3]).
	size mismatch for mono_decoder.scratch.refinenet1.resConfUnit1.conv2.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for mono_decoder.scratch.refinenet1.resConfUnit2.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 128, 3, 3]).
	size mismatch for mono_decoder.scratch.refinenet1.resConfUnit2.conv1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for mono_decoder.scratch.refinenet1.resConfUnit2.conv2.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 128, 3, 3]).
	size mismatch for mono_decoder.scratch.refinenet1.resConfUnit2.conv2.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for mono_decoder.scratch.refinenet2.out_conv.weight: copying a param with shape torch.Size([256, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([128, 128, 1, 1]).
	size mismatch for mono_decoder.scratch.refinenet2.out_conv.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for mono_decoder.scratch.refinenet2.resConfUnit1.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 128, 3, 3]).
	size mismatch for mono_decoder.scratch.refinenet2.resConfUnit1.conv1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for mono_decoder.scratch.refinenet2.resConfUnit1.conv2.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 128, 3, 3]).
	size mismatch for mono_decoder.scratch.refinenet2.resConfUnit1.conv2.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for mono_decoder.scratch.refinenet2.resConfUnit2.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 128, 3, 3]).
	size mismatch for mono_decoder.scratch.refinenet2.resConfUnit2.conv1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for mono_decoder.scratch.refinenet2.resConfUnit2.conv2.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 128, 3, 3]).
	size mismatch for mono_decoder.scratch.refinenet2.resConfUnit2.conv2.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for mono_decoder.scratch.refinenet3.out_conv.weight: copying a param with shape torch.Size([256, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([128, 128, 1, 1]).
	size mismatch for mono_decoder.scratch.refinenet3.out_conv.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for mono_decoder.scratch.refinenet3.resConfUnit1.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 128, 3, 3]).
	size mismatch for mono_decoder.scratch.refinenet3.resConfUnit1.conv1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for mono_decoder.scratch.refinenet3.resConfUnit1.conv2.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 128, 3, 3]).
	size mismatch for mono_decoder.scratch.refinenet3.resConfUnit1.conv2.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for mono_decoder.scratch.refinenet3.resConfUnit2.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 128, 3, 3]).
	size mismatch for mono_decoder.scratch.refinenet3.resConfUnit2.conv1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for mono_decoder.scratch.refinenet3.resConfUnit2.conv2.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 128, 3, 3]).
	size mismatch for mono_decoder.scratch.refinenet3.resConfUnit2.conv2.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for mono_decoder.scratch.refinenet4.out_conv.weight: copying a param with shape torch.Size([256, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([128, 128, 1, 1]).
	size mismatch for mono_decoder.scratch.refinenet4.out_conv.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for mono_decoder.scratch.refinenet4.resConfUnit1.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 128, 3, 3]).
	size mismatch for mono_decoder.scratch.refinenet4.resConfUnit1.conv1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for mono_decoder.scratch.refinenet4.resConfUnit1.conv2.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 128, 3, 3]).
	size mismatch for mono_decoder.scratch.refinenet4.resConfUnit1.conv2.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for mono_decoder.scratch.refinenet4.resConfUnit2.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 128, 3, 3]).
	size mismatch for mono_decoder.scratch.refinenet4.resConfUnit2.conv1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for mono_decoder.scratch.refinenet4.resConfUnit2.conv2.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 128, 3, 3]).
	size mismatch for mono_decoder.scratch.refinenet4.resConfUnit2.conv2.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for mono_decoder.scratch.output_conv1.weight: copying a param with shape torch.Size([128, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 128, 3, 3]).
	size mismatch for mono_decoder.scratch.output_conv1.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([64]).
	size mismatch for mono_decoder.scratch.output_conv2.0.weight: copying a param with shape torch.Size([32, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([32, 64, 3, 3]).
	size mismatch for feat_decoder.projects.0.weight: copying a param with shape torch.Size([256, 1024, 1, 1]) from checkpoint, the shape in current model is torch.Size([96, 768, 1, 1]).
	size mismatch for feat_decoder.projects.0.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([96]).
	size mismatch for feat_decoder.projects.1.weight: copying a param with shape torch.Size([512, 1024, 1, 1]) from checkpoint, the shape in current model is torch.Size([192, 768, 1, 1]).
	size mismatch for feat_decoder.projects.1.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([192]).
	size mismatch for feat_decoder.projects.2.weight: copying a param with shape torch.Size([1024, 1024, 1, 1]) from checkpoint, the shape in current model is torch.Size([384, 768, 1, 1]).
	size mismatch for feat_decoder.projects.2.bias: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([384]).
	size mismatch for feat_decoder.projects.3.weight: copying a param with shape torch.Size([1024, 1024, 1, 1]) from checkpoint, the shape in current model is torch.Size([768, 768, 1, 1]).
	size mismatch for feat_decoder.projects.3.bias: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for feat_decoder.resize_layers.0.weight: copying a param with shape torch.Size([256, 256, 4, 4]) from checkpoint, the shape in current model is torch.Size([96, 96, 4, 4]).
	size mismatch for feat_decoder.resize_layers.0.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([96]).
	size mismatch for feat_decoder.resize_layers.1.weight: copying a param with shape torch.Size([512, 512, 2, 2]) from checkpoint, the shape in current model is torch.Size([192, 192, 2, 2]).
	size mismatch for feat_decoder.resize_layers.1.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([192]).
	size mismatch for feat_decoder.resize_layers.3.weight: copying a param with shape torch.Size([1024, 1024, 3, 3]) from checkpoint, the shape in current model is torch.Size([768, 768, 3, 3]).
	size mismatch for feat_decoder.resize_layers.3.bias: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for feat_decoder.scratch.layer1_rn.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 96, 3, 3]).
	size mismatch for feat_decoder.scratch.layer2_rn.weight: copying a param with shape torch.Size([256, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 192, 3, 3]).
	size mismatch for feat_decoder.scratch.layer3_rn.weight: copying a param with shape torch.Size([256, 1024, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 384, 3, 3]).
	size mismatch for feat_decoder.scratch.layer4_rn.weight: copying a param with shape torch.Size([256, 1024, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 768, 3, 3]).
	size mismatch for feat_decoder.scratch.refinenet1.out_conv.weight: copying a param with shape torch.Size([256, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([128, 128, 1, 1]).
	size mismatch for feat_decoder.scratch.refinenet1.out_conv.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for feat_decoder.scratch.refinenet1.resConfUnit1.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 128, 3, 3]).
	size mismatch for feat_decoder.scratch.refinenet1.resConfUnit1.conv1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for feat_decoder.scratch.refinenet1.resConfUnit1.conv2.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 128, 3, 3]).
	size mismatch for feat_decoder.scratch.refinenet1.resConfUnit1.conv2.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for feat_decoder.scratch.refinenet1.resConfUnit2.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 128, 3, 3]).
	size mismatch for feat_decoder.scratch.refinenet1.resConfUnit2.conv1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for feat_decoder.scratch.refinenet1.resConfUnit2.conv2.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 128, 3, 3]).
	size mismatch for feat_decoder.scratch.refinenet1.resConfUnit2.conv2.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for feat_decoder.scratch.refinenet2.out_conv.weight: copying a param with shape torch.Size([256, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([128, 128, 1, 1]).
	size mismatch for feat_decoder.scratch.refinenet2.out_conv.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for feat_decoder.scratch.refinenet2.resConfUnit1.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 128, 3, 3]).
	size mismatch for feat_decoder.scratch.refinenet2.resConfUnit1.conv1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for feat_decoder.scratch.refinenet2.resConfUnit1.conv2.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 128, 3, 3]).
	size mismatch for feat_decoder.scratch.refinenet2.resConfUnit1.conv2.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for feat_decoder.scratch.refinenet2.resConfUnit2.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 128, 3, 3]).
	size mismatch for feat_decoder.scratch.refinenet2.resConfUnit2.conv1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for feat_decoder.scratch.refinenet2.resConfUnit2.conv2.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 128, 3, 3]).
	size mismatch for feat_decoder.scratch.refinenet2.resConfUnit2.conv2.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for feat_decoder.scratch.refinenet3.out_conv.weight: copying a param with shape torch.Size([256, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([128, 128, 1, 1]).
	size mismatch for feat_decoder.scratch.refinenet3.out_conv.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for feat_decoder.scratch.refinenet3.resConfUnit1.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 128, 3, 3]).
	size mismatch for feat_decoder.scratch.refinenet3.resConfUnit1.conv1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for feat_decoder.scratch.refinenet3.resConfUnit1.conv2.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 128, 3, 3]).
	size mismatch for feat_decoder.scratch.refinenet3.resConfUnit1.conv2.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for feat_decoder.scratch.refinenet3.resConfUnit2.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 128, 3, 3]).
	size mismatch for feat_decoder.scratch.refinenet3.resConfUnit2.conv1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for feat_decoder.scratch.refinenet3.resConfUnit2.conv2.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 128, 3, 3]).
	size mismatch for feat_decoder.scratch.refinenet3.resConfUnit2.conv2.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for feat_decoder.scratch.refinenet4.out_conv.weight: copying a param with shape torch.Size([256, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([128, 128, 1, 1]).
	size mismatch for feat_decoder.scratch.refinenet4.out_conv.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for feat_decoder.scratch.refinenet4.resConfUnit1.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 128, 3, 3]).
	size mismatch for feat_decoder.scratch.refinenet4.resConfUnit1.conv1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for feat_decoder.scratch.refinenet4.resConfUnit1.conv2.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 128, 3, 3]).
	size mismatch for feat_decoder.scratch.refinenet4.resConfUnit1.conv2.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for feat_decoder.scratch.refinenet4.resConfUnit2.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 128, 3, 3]).
	size mismatch for feat_decoder.scratch.refinenet4.resConfUnit2.conv1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for feat_decoder.scratch.refinenet4.resConfUnit2.conv2.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 128, 3, 3]).
	size mismatch for feat_decoder.scratch.refinenet4.resConfUnit2.conv2.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([128]).

Set the environment variable HYDRA_FULL_ERROR=1 for a complete stack trace.
Traceback (most recent call last):
  File "train_whu.py", line 119, in main
    model.load_state_dict(ckpt, strict=True)
  File "/home/s0214/.conda/envs/monster/lib/python3.8/site-packages/torch/nn/modules/module.py", line 2152, in load_state_dict
    raise RuntimeError('Error(s) in loading state_dict for {}:\n\t{}'.format(
RuntimeError: Error(s) in loading state_dict for Monster:
	Unexpected key(s) in state_dict: "mono_encoder.blocks.12.norm1.weight", "mono_encoder.blocks.12.norm1.bias", "mono_encoder.blocks.12.attn.qkv.weight", "mono_encoder.blocks.12.attn.qkv.bias", "mono_encoder.blocks.12.attn.proj.weight", "mono_encoder.blocks.12.attn.proj.bias", "mono_encoder.blocks.12.ls1.gamma", "mono_encoder.blocks.12.norm2.weight", "mono_encoder.blocks.12.norm2.bias", "mono_encoder.blocks.12.mlp.fc1.weight", "mono_encoder.blocks.12.mlp.fc1.bias", "mono_encoder.blocks.12.mlp.fc2.weight", "mono_encoder.blocks.12.mlp.fc2.bias", "mono_encoder.blocks.12.ls2.gamma", "mono_encoder.blocks.13.norm1.weight", "mono_encoder.blocks.13.norm1.bias", "mono_encoder.blocks.13.attn.qkv.weight", "mono_encoder.blocks.13.attn.qkv.bias", "mono_encoder.blocks.13.attn.proj.weight", "mono_encoder.blocks.13.attn.proj.bias", "mono_encoder.blocks.13.ls1.gamma", "mono_encoder.blocks.13.norm2.weight", "mono_encoder.blocks.13.norm2.bias", "mono_encoder.blocks.13.mlp.fc1.weight", "mono_encoder.blocks.13.mlp.fc1.bias", "mono_encoder.blocks.13.mlp.fc2.weight", "mono_encoder.blocks.13.mlp.fc2.bias", "mono_encoder.blocks.13.ls2.gamma", "mono_encoder.blocks.14.norm1.weight", "mono_encoder.blocks.14.norm1.bias", "mono_encoder.blocks.14.attn.qkv.weight", "mono_encoder.blocks.14.attn.qkv.bias", "mono_encoder.blocks.14.attn.proj.weight", "mono_encoder.blocks.14.attn.proj.bias", "mono_encoder.blocks.14.ls1.gamma", "mono_encoder.blocks.14.norm2.weight", "mono_encoder.blocks.14.norm2.bias", "mono_encoder.blocks.14.mlp.fc1.weight", "mono_encoder.blocks.14.mlp.fc1.bias", "mono_encoder.blocks.14.mlp.fc2.weight", "mono_encoder.blocks.14.mlp.fc2.bias", "mono_encoder.blocks.14.ls2.gamma", "mono_encoder.blocks.15.norm1.weight", "mono_encoder.blocks.15.norm1.bias", "mono_encoder.blocks.15.attn.qkv.weight", "mono_encoder.blocks.15.attn.qkv.bias", "mono_encoder.blocks.15.attn.proj.weight", "mono_encoder.blocks.15.attn.proj.bias", "mono_encoder.blocks.15.ls1.gamma", "mono_encoder.blocks.15.norm2.weight", "mono_encoder.blocks.15.norm2.bias", "mono_encoder.blocks.15.mlp.fc1.weight", "mono_encoder.blocks.15.mlp.fc1.bias", "mono_encoder.blocks.15.mlp.fc2.weight", "mono_encoder.blocks.15.mlp.fc2.bias", "mono_encoder.blocks.15.ls2.gamma", "mono_encoder.blocks.16.norm1.weight", "mono_encoder.blocks.16.norm1.bias", "mono_encoder.blocks.16.attn.qkv.weight", "mono_encoder.blocks.16.attn.qkv.bias", "mono_encoder.blocks.16.attn.proj.weight", "mono_encoder.blocks.16.attn.proj.bias", "mono_encoder.blocks.16.ls1.gamma", "mono_encoder.blocks.16.norm2.weight", "mono_encoder.blocks.16.norm2.bias", "mono_encoder.blocks.16.mlp.fc1.weight", "mono_encoder.blocks.16.mlp.fc1.bias", "mono_encoder.blocks.16.mlp.fc2.weight", "mono_encoder.blocks.16.mlp.fc2.bias", "mono_encoder.blocks.16.ls2.gamma", "mono_encoder.blocks.17.norm1.weight", "mono_encoder.blocks.17.norm1.bias", "mono_encoder.blocks.17.attn.qkv.weight", "mono_encoder.blocks.17.attn.qkv.bias", "mono_encoder.blocks.17.attn.proj.weight", "mono_encoder.blocks.17.attn.proj.bias", "mono_encoder.blocks.17.ls1.gamma", "mono_encoder.blocks.17.norm2.weight", "mono_encoder.blocks.17.norm2.bias", "mono_encoder.blocks.17.mlp.fc1.weight", "mono_encoder.blocks.17.mlp.fc1.bias", "mono_encoder.blocks.17.mlp.fc2.weight", "mono_encoder.blocks.17.mlp.fc2.bias", "mono_encoder.blocks.17.ls2.gamma", "mono_encoder.blocks.18.norm1.weight", "mono_encoder.blocks.18.norm1.bias", "mono_encoder.blocks.18.attn.qkv.weight", "mono_encoder.blocks.18.attn.qkv.bias", "mono_encoder.blocks.18.attn.proj.weight", "mono_encoder.blocks.18.attn.proj.bias", "mono_encoder.blocks.18.ls1.gamma", "mono_encoder.blocks.18.norm2.weight", "mono_encoder.blocks.18.norm2.bias", "mono_encoder.blocks.18.mlp.fc1.weight", "mono_encoder.blocks.18.mlp.fc1.bias", "mono_encoder.blocks.18.mlp.fc2.weight", "mono_encoder.blocks.18.mlp.fc2.bias", "mono_encoder.blocks.18.ls2.gamma", "mono_encoder.blocks.19.norm1.weight", "mono_encoder.blocks.19.norm1.bias", "mono_encoder.blocks.19.attn.qkv.weight", "mono_encoder.blocks.19.attn.qkv.bias", "mono_encoder.blocks.19.attn.proj.weight", "mono_encoder.blocks.19.attn.proj.bias", "mono_encoder.blocks.19.ls1.gamma", "mono_encoder.blocks.19.norm2.weight", "mono_encoder.blocks.19.norm2.bias", "mono_encoder.blocks.19.mlp.fc1.weight", "mono_encoder.blocks.19.mlp.fc1.bias", "mono_encoder.blocks.19.mlp.fc2.weight", "mono_encoder.blocks.19.mlp.fc2.bias", "mono_encoder.blocks.19.ls2.gamma", "mono_encoder.blocks.20.norm1.weight", "mono_encoder.blocks.20.norm1.bias", "mono_encoder.blocks.20.attn.qkv.weight", "mono_encoder.blocks.20.attn.qkv.bias", "mono_encoder.blocks.20.attn.proj.weight", "mono_encoder.blocks.20.attn.proj.bias", "mono_encoder.blocks.20.ls1.gamma", "mono_encoder.blocks.20.norm2.weight", "mono_encoder.blocks.20.norm2.bias", "mono_encoder.blocks.20.mlp.fc1.weight", "mono_encoder.blocks.20.mlp.fc1.bias", "mono_encoder.blocks.20.mlp.fc2.weight", "mono_encoder.blocks.20.mlp.fc2.bias", "mono_encoder.blocks.20.ls2.gamma", "mono_encoder.blocks.21.norm1.weight", "mono_encoder.blocks.21.norm1.bias", "mono_encoder.blocks.21.attn.qkv.weight", "mono_encoder.blocks.21.attn.qkv.bias", "mono_encoder.blocks.21.attn.proj.weight", "mono_encoder.blocks.21.attn.proj.bias", "mono_encoder.blocks.21.ls1.gamma", "mono_encoder.blocks.21.norm2.weight", "mono_encoder.blocks.21.norm2.bias", "mono_encoder.blocks.21.mlp.fc1.weight", "mono_encoder.blocks.21.mlp.fc1.bias", "mono_encoder.blocks.21.mlp.fc2.weight", "mono_encoder.blocks.21.mlp.fc2.bias", "mono_encoder.blocks.21.ls2.gamma", "mono_encoder.blocks.22.norm1.weight", "mono_encoder.blocks.22.norm1.bias", "mono_encoder.blocks.22.attn.qkv.weight", "mono_encoder.blocks.22.attn.qkv.bias", "mono_encoder.blocks.22.attn.proj.weight", "mono_encoder.blocks.22.attn.proj.bias", "mono_encoder.blocks.22.ls1.gamma", "mono_encoder.blocks.22.norm2.weight", "mono_encoder.blocks.22.norm2.bias", "mono_encoder.blocks.22.mlp.fc1.weight", "mono_encoder.blocks.22.mlp.fc1.bias", "mono_encoder.blocks.22.mlp.fc2.weight", "mono_encoder.blocks.22.mlp.fc2.bias", "mono_encoder.blocks.22.ls2.gamma", "mono_encoder.blocks.23.norm1.weight", "mono_encoder.blocks.23.norm1.bias", "mono_encoder.blocks.23.attn.qkv.weight", "mono_encoder.blocks.23.attn.qkv.bias", "mono_encoder.blocks.23.attn.proj.weight", "mono_encoder.blocks.23.attn.proj.bias", "mono_encoder.blocks.23.ls1.gamma", "mono_encoder.blocks.23.norm2.weight", "mono_encoder.blocks.23.norm2.bias", "mono_encoder.blocks.23.mlp.fc1.weight", "mono_encoder.blocks.23.mlp.fc1.bias", "mono_encoder.blocks.23.mlp.fc2.weight", "mono_encoder.blocks.23.mlp.fc2.bias", "mono_encoder.blocks.23.ls2.gamma". 
	size mismatch for feat_transfer.conv4x.0.weight: copying a param with shape torch.Size([48, 304, 5, 5]) from checkpoint, the shape in current model is torch.Size([48, 176, 5, 5]).
	size mismatch for feat_transfer.conv8x.0.weight: copying a param with shape torch.Size([64, 320, 5, 5]) from checkpoint, the shape in current model is torch.Size([64, 192, 5, 5]).
	size mismatch for feat_transfer.conv16x.0.weight: copying a param with shape torch.Size([192, 448, 5, 5]) from checkpoint, the shape in current model is torch.Size([192, 320, 5, 5]).
	size mismatch for feat_transfer.conv32x.0.weight: copying a param with shape torch.Size([160, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([160, 128, 3, 3]).
	size mismatch for feat_transfer.res_16x.weight: copying a param with shape torch.Size([192, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([192, 128, 1, 1]).
	size mismatch for feat_transfer.res_8x.weight: copying a param with shape torch.Size([64, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([64, 128, 1, 1]).
	size mismatch for feat_transfer.res_4x.weight: copying a param with shape torch.Size([48, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([48, 128, 1, 1]).
	size mismatch for feat_transfer_cnet.res_16x.weight: copying a param with shape torch.Size([128, 448, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 320, 3, 3]).
	size mismatch for feat_transfer_cnet.res_8x.weight: copying a param with shape torch.Size([128, 352, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 224, 3, 3]).
	size mismatch for feat_transfer_cnet.res_4x.weight: copying a param with shape torch.Size([128, 304, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 176, 3, 3]).
	size mismatch for mono_encoder.cls_token: copying a param with shape torch.Size([1, 1, 1024]) from checkpoint, the shape in current model is torch.Size([1, 1, 768]).
	size mismatch for mono_encoder.pos_embed: copying a param with shape torch.Size([1, 1370, 1024]) from checkpoint, the shape in current model is torch.Size([1, 1370, 768]).
	size mismatch for mono_encoder.mask_token: copying a param with shape torch.Size([1, 1024]) from checkpoint, the shape in current model is torch.Size([1, 768]).
	size mismatch for mono_encoder.patch_embed.proj.weight: copying a param with shape torch.Size([1024, 3, 14, 14]) from checkpoint, the shape in current model is torch.Size([768, 3, 14, 14]).
	size mismatch for mono_encoder.patch_embed.proj.bias: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.0.norm1.weight: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.0.norm1.bias: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.0.attn.qkv.weight: copying a param with shape torch.Size([3072, 1024]) from checkpoint, the shape in current model is torch.Size([2304, 768]).
	size mismatch for mono_encoder.blocks.0.attn.qkv.bias: copying a param with shape torch.Size([3072]) from checkpoint, the shape in current model is torch.Size([2304]).
	size mismatch for mono_encoder.blocks.0.attn.proj.weight: copying a param with shape torch.Size([1024, 1024]) from checkpoint, the shape in current model is torch.Size([768, 768]).
	size mismatch for mono_encoder.blocks.0.attn.proj.bias: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.0.ls1.gamma: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.0.norm2.weight: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.0.norm2.bias: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.0.mlp.fc1.weight: copying a param with shape torch.Size([4096, 1024]) from checkpoint, the shape in current model is torch.Size([3072, 768]).
	size mismatch for mono_encoder.blocks.0.mlp.fc1.bias: copying a param with shape torch.Size([4096]) from checkpoint, the shape in current model is torch.Size([3072]).
	size mismatch for mono_encoder.blocks.0.mlp.fc2.weight: copying a param with shape torch.Size([1024, 4096]) from checkpoint, the shape in current model is torch.Size([768, 3072]).
	size mismatch for mono_encoder.blocks.0.mlp.fc2.bias: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.0.ls2.gamma: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.1.norm1.weight: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.1.norm1.bias: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.1.attn.qkv.weight: copying a param with shape torch.Size([3072, 1024]) from checkpoint, the shape in current model is torch.Size([2304, 768]).
	size mismatch for mono_encoder.blocks.1.attn.qkv.bias: copying a param with shape torch.Size([3072]) from checkpoint, the shape in current model is torch.Size([2304]).
	size mismatch for mono_encoder.blocks.1.attn.proj.weight: copying a param with shape torch.Size([1024, 1024]) from checkpoint, the shape in current model is torch.Size([768, 768]).
	size mismatch for mono_encoder.blocks.1.attn.proj.bias: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.1.ls1.gamma: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.1.norm2.weight: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.1.norm2.bias: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.1.mlp.fc1.weight: copying a param with shape torch.Size([4096, 1024]) from checkpoint, the shape in current model is torch.Size([3072, 768]).
	size mismatch for mono_encoder.blocks.1.mlp.fc1.bias: copying a param with shape torch.Size([4096]) from checkpoint, the shape in current model is torch.Size([3072]).
	size mismatch for mono_encoder.blocks.1.mlp.fc2.weight: copying a param with shape torch.Size([1024, 4096]) from checkpoint, the shape in current model is torch.Size([768, 3072]).
	size mismatch for mono_encoder.blocks.1.mlp.fc2.bias: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.1.ls2.gamma: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.2.norm1.weight: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.2.norm1.bias: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.2.attn.qkv.weight: copying a param with shape torch.Size([3072, 1024]) from checkpoint, the shape in current model is torch.Size([2304, 768]).
	size mismatch for mono_encoder.blocks.2.attn.qkv.bias: copying a param with shape torch.Size([3072]) from checkpoint, the shape in current model is torch.Size([2304]).
	size mismatch for mono_encoder.blocks.2.attn.proj.weight: copying a param with shape torch.Size([1024, 1024]) from checkpoint, the shape in current model is torch.Size([768, 768]).
	size mismatch for mono_encoder.blocks.2.attn.proj.bias: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.2.ls1.gamma: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.2.norm2.weight: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.2.norm2.bias: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.2.mlp.fc1.weight: copying a param with shape torch.Size([4096, 1024]) from checkpoint, the shape in current model is torch.Size([3072, 768]).
	size mismatch for mono_encoder.blocks.2.mlp.fc1.bias: copying a param with shape torch.Size([4096]) from checkpoint, the shape in current model is torch.Size([3072]).
	size mismatch for mono_encoder.blocks.2.mlp.fc2.weight: copying a param with shape torch.Size([1024, 4096]) from checkpoint, the shape in current model is torch.Size([768, 3072]).
	size mismatch for mono_encoder.blocks.2.mlp.fc2.bias: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.2.ls2.gamma: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.3.norm1.weight: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.3.norm1.bias: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.3.attn.qkv.weight: copying a param with shape torch.Size([3072, 1024]) from checkpoint, the shape in current model is torch.Size([2304, 768]).
	size mismatch for mono_encoder.blocks.3.attn.qkv.bias: copying a param with shape torch.Size([3072]) from checkpoint, the shape in current model is torch.Size([2304]).
	size mismatch for mono_encoder.blocks.3.attn.proj.weight: copying a param with shape torch.Size([1024, 1024]) from checkpoint, the shape in current model is torch.Size([768, 768]).
	size mismatch for mono_encoder.blocks.3.attn.proj.bias: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.3.ls1.gamma: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.3.norm2.weight: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.3.norm2.bias: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.3.mlp.fc1.weight: copying a param with shape torch.Size([4096, 1024]) from checkpoint, the shape in current model is torch.Size([3072, 768]).
	size mismatch for mono_encoder.blocks.3.mlp.fc1.bias: copying a param with shape torch.Size([4096]) from checkpoint, the shape in current model is torch.Size([3072]).
	size mismatch for mono_encoder.blocks.3.mlp.fc2.weight: copying a param with shape torch.Size([1024, 4096]) from checkpoint, the shape in current model is torch.Size([768, 3072]).
	size mismatch for mono_encoder.blocks.3.mlp.fc2.bias: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.3.ls2.gamma: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.4.norm1.weight: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.4.norm1.bias: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.4.attn.qkv.weight: copying a param with shape torch.Size([3072, 1024]) from checkpoint, the shape in current model is torch.Size([2304, 768]).
	size mismatch for mono_encoder.blocks.4.attn.qkv.bias: copying a param with shape torch.Size([3072]) from checkpoint, the shape in current model is torch.Size([2304]).
	size mismatch for mono_encoder.blocks.4.attn.proj.weight: copying a param with shape torch.Size([1024, 1024]) from checkpoint, the shape in current model is torch.Size([768, 768]).
	size mismatch for mono_encoder.blocks.4.attn.proj.bias: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.4.ls1.gamma: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.4.norm2.weight: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.4.norm2.bias: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.4.mlp.fc1.weight: copying a param with shape torch.Size([4096, 1024]) from checkpoint, the shape in current model is torch.Size([3072, 768]).
	size mismatch for mono_encoder.blocks.4.mlp.fc1.bias: copying a param with shape torch.Size([4096]) from checkpoint, the shape in current model is torch.Size([3072]).
	size mismatch for mono_encoder.blocks.4.mlp.fc2.weight: copying a param with shape torch.Size([1024, 4096]) from checkpoint, the shape in current model is torch.Size([768, 3072]).
	size mismatch for mono_encoder.blocks.4.mlp.fc2.bias: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.4.ls2.gamma: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.5.norm1.weight: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.5.norm1.bias: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.5.attn.qkv.weight: copying a param with shape torch.Size([3072, 1024]) from checkpoint, the shape in current model is torch.Size([2304, 768]).
	size mismatch for mono_encoder.blocks.5.attn.qkv.bias: copying a param with shape torch.Size([3072]) from checkpoint, the shape in current model is torch.Size([2304]).
	size mismatch for mono_encoder.blocks.5.attn.proj.weight: copying a param with shape torch.Size([1024, 1024]) from checkpoint, the shape in current model is torch.Size([768, 768]).
	size mismatch for mono_encoder.blocks.5.attn.proj.bias: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.5.ls1.gamma: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.5.norm2.weight: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.5.norm2.bias: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.5.mlp.fc1.weight: copying a param with shape torch.Size([4096, 1024]) from checkpoint, the shape in current model is torch.Size([3072, 768]).
	size mismatch for mono_encoder.blocks.5.mlp.fc1.bias: copying a param with shape torch.Size([4096]) from checkpoint, the shape in current model is torch.Size([3072]).
	size mismatch for mono_encoder.blocks.5.mlp.fc2.weight: copying a param with shape torch.Size([1024, 4096]) from checkpoint, the shape in current model is torch.Size([768, 3072]).
	size mismatch for mono_encoder.blocks.5.mlp.fc2.bias: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.5.ls2.gamma: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.6.norm1.weight: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.6.norm1.bias: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.6.attn.qkv.weight: copying a param with shape torch.Size([3072, 1024]) from checkpoint, the shape in current model is torch.Size([2304, 768]).
	size mismatch for mono_encoder.blocks.6.attn.qkv.bias: copying a param with shape torch.Size([3072]) from checkpoint, the shape in current model is torch.Size([2304]).
	size mismatch for mono_encoder.blocks.6.attn.proj.weight: copying a param with shape torch.Size([1024, 1024]) from checkpoint, the shape in current model is torch.Size([768, 768]).
	size mismatch for mono_encoder.blocks.6.attn.proj.bias: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.6.ls1.gamma: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.6.norm2.weight: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.6.norm2.bias: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.6.mlp.fc1.weight: copying a param with shape torch.Size([4096, 1024]) from checkpoint, the shape in current model is torch.Size([3072, 768]).
	size mismatch for mono_encoder.blocks.6.mlp.fc1.bias: copying a param with shape torch.Size([4096]) from checkpoint, the shape in current model is torch.Size([3072]).
	size mismatch for mono_encoder.blocks.6.mlp.fc2.weight: copying a param with shape torch.Size([1024, 4096]) from checkpoint, the shape in current model is torch.Size([768, 3072]).
	size mismatch for mono_encoder.blocks.6.mlp.fc2.bias: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.6.ls2.gamma: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.7.norm1.weight: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.7.norm1.bias: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.7.attn.qkv.weight: copying a param with shape torch.Size([3072, 1024]) from checkpoint, the shape in current model is torch.Size([2304, 768]).
	size mismatch for mono_encoder.blocks.7.attn.qkv.bias: copying a param with shape torch.Size([3072]) from checkpoint, the shape in current model is torch.Size([2304]).
	size mismatch for mono_encoder.blocks.7.attn.proj.weight: copying a param with shape torch.Size([1024, 1024]) from checkpoint, the shape in current model is torch.Size([768, 768]).
	size mismatch for mono_encoder.blocks.7.attn.proj.bias: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.7.ls1.gamma: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.7.norm2.weight: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.7.norm2.bias: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.7.mlp.fc1.weight: copying a param with shape torch.Size([4096, 1024]) from checkpoint, the shape in current model is torch.Size([3072, 768]).
	size mismatch for mono_encoder.blocks.7.mlp.fc1.bias: copying a param with shape torch.Size([4096]) from checkpoint, the shape in current model is torch.Size([3072]).
	size mismatch for mono_encoder.blocks.7.mlp.fc2.weight: copying a param with shape torch.Size([1024, 4096]) from checkpoint, the shape in current model is torch.Size([768, 3072]).
	size mismatch for mono_encoder.blocks.7.mlp.fc2.bias: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.7.ls2.gamma: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.8.norm1.weight: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.8.norm1.bias: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.8.attn.qkv.weight: copying a param with shape torch.Size([3072, 1024]) from checkpoint, the shape in current model is torch.Size([2304, 768]).
	size mismatch for mono_encoder.blocks.8.attn.qkv.bias: copying a param with shape torch.Size([3072]) from checkpoint, the shape in current model is torch.Size([2304]).
	size mismatch for mono_encoder.blocks.8.attn.proj.weight: copying a param with shape torch.Size([1024, 1024]) from checkpoint, the shape in current model is torch.Size([768, 768]).
	size mismatch for mono_encoder.blocks.8.attn.proj.bias: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.8.ls1.gamma: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.8.norm2.weight: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.8.norm2.bias: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.8.mlp.fc1.weight: copying a param with shape torch.Size([4096, 1024]) from checkpoint, the shape in current model is torch.Size([3072, 768]).
	size mismatch for mono_encoder.blocks.8.mlp.fc1.bias: copying a param with shape torch.Size([4096]) from checkpoint, the shape in current model is torch.Size([3072]).
	size mismatch for mono_encoder.blocks.8.mlp.fc2.weight: copying a param with shape torch.Size([1024, 4096]) from checkpoint, the shape in current model is torch.Size([768, 3072]).
	size mismatch for mono_encoder.blocks.8.mlp.fc2.bias: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.8.ls2.gamma: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.9.norm1.weight: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.9.norm1.bias: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.9.attn.qkv.weight: copying a param with shape torch.Size([3072, 1024]) from checkpoint, the shape in current model is torch.Size([2304, 768]).
	size mismatch for mono_encoder.blocks.9.attn.qkv.bias: copying a param with shape torch.Size([3072]) from checkpoint, the shape in current model is torch.Size([2304]).
	size mismatch for mono_encoder.blocks.9.attn.proj.weight: copying a param with shape torch.Size([1024, 1024]) from checkpoint, the shape in current model is torch.Size([768, 768]).
	size mismatch for mono_encoder.blocks.9.attn.proj.bias: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.9.ls1.gamma: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.9.norm2.weight: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.9.norm2.bias: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.9.mlp.fc1.weight: copying a param with shape torch.Size([4096, 1024]) from checkpoint, the shape in current model is torch.Size([3072, 768]).
	size mismatch for mono_encoder.blocks.9.mlp.fc1.bias: copying a param with shape torch.Size([4096]) from checkpoint, the shape in current model is torch.Size([3072]).
	size mismatch for mono_encoder.blocks.9.mlp.fc2.weight: copying a param with shape torch.Size([1024, 4096]) from checkpoint, the shape in current model is torch.Size([768, 3072]).
	size mismatch for mono_encoder.blocks.9.mlp.fc2.bias: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.9.ls2.gamma: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.10.norm1.weight: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.10.norm1.bias: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.10.attn.qkv.weight: copying a param with shape torch.Size([3072, 1024]) from checkpoint, the shape in current model is torch.Size([2304, 768]).
	size mismatch for mono_encoder.blocks.10.attn.qkv.bias: copying a param with shape torch.Size([3072]) from checkpoint, the shape in current model is torch.Size([2304]).
	size mismatch for mono_encoder.blocks.10.attn.proj.weight: copying a param with shape torch.Size([1024, 1024]) from checkpoint, the shape in current model is torch.Size([768, 768]).
	size mismatch for mono_encoder.blocks.10.attn.proj.bias: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.10.ls1.gamma: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.10.norm2.weight: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.10.norm2.bias: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.10.mlp.fc1.weight: copying a param with shape torch.Size([4096, 1024]) from checkpoint, the shape in current model is torch.Size([3072, 768]).
	size mismatch for mono_encoder.blocks.10.mlp.fc1.bias: copying a param with shape torch.Size([4096]) from checkpoint, the shape in current model is torch.Size([3072]).
	size mismatch for mono_encoder.blocks.10.mlp.fc2.weight: copying a param with shape torch.Size([1024, 4096]) from checkpoint, the shape in current model is torch.Size([768, 3072]).
	size mismatch for mono_encoder.blocks.10.mlp.fc2.bias: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.10.ls2.gamma: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.11.norm1.weight: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.11.norm1.bias: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.11.attn.qkv.weight: copying a param with shape torch.Size([3072, 1024]) from checkpoint, the shape in current model is torch.Size([2304, 768]).
	size mismatch for mono_encoder.blocks.11.attn.qkv.bias: copying a param with shape torch.Size([3072]) from checkpoint, the shape in current model is torch.Size([2304]).
	size mismatch for mono_encoder.blocks.11.attn.proj.weight: copying a param with shape torch.Size([1024, 1024]) from checkpoint, the shape in current model is torch.Size([768, 768]).
	size mismatch for mono_encoder.blocks.11.attn.proj.bias: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.11.ls1.gamma: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.11.norm2.weight: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.11.norm2.bias: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.11.mlp.fc1.weight: copying a param with shape torch.Size([4096, 1024]) from checkpoint, the shape in current model is torch.Size([3072, 768]).
	size mismatch for mono_encoder.blocks.11.mlp.fc1.bias: copying a param with shape torch.Size([4096]) from checkpoint, the shape in current model is torch.Size([3072]).
	size mismatch for mono_encoder.blocks.11.mlp.fc2.weight: copying a param with shape torch.Size([1024, 4096]) from checkpoint, the shape in current model is torch.Size([768, 3072]).
	size mismatch for mono_encoder.blocks.11.mlp.fc2.bias: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.11.ls2.gamma: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.norm.weight: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.norm.bias: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_decoder.projects.0.weight: copying a param with shape torch.Size([256, 1024, 1, 1]) from checkpoint, the shape in current model is torch.Size([96, 768, 1, 1]).
	size mismatch for mono_decoder.projects.0.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([96]).
	size mismatch for mono_decoder.projects.1.weight: copying a param with shape torch.Size([512, 1024, 1, 1]) from checkpoint, the shape in current model is torch.Size([192, 768, 1, 1]).
	size mismatch for mono_decoder.projects.1.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([192]).
	size mismatch for mono_decoder.projects.2.weight: copying a param with shape torch.Size([1024, 1024, 1, 1]) from checkpoint, the shape in current model is torch.Size([384, 768, 1, 1]).
	size mismatch for mono_decoder.projects.2.bias: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([384]).
	size mismatch for mono_decoder.projects.3.weight: copying a param with shape torch.Size([1024, 1024, 1, 1]) from checkpoint, the shape in current model is torch.Size([768, 768, 1, 1]).
	size mismatch for mono_decoder.projects.3.bias: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_decoder.resize_layers.0.weight: copying a param with shape torch.Size([256, 256, 4, 4]) from checkpoint, the shape in current model is torch.Size([96, 96, 4, 4]).
	size mismatch for mono_decoder.resize_layers.0.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([96]).
	size mismatch for mono_decoder.resize_layers.1.weight: copying a param with shape torch.Size([512, 512, 2, 2]) from checkpoint, the shape in current model is torch.Size([192, 192, 2, 2]).
	size mismatch for mono_decoder.resize_layers.1.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([192]).
	size mismatch for mono_decoder.resize_layers.3.weight: copying a param with shape torch.Size([1024, 1024, 3, 3]) from checkpoint, the shape in current model is torch.Size([768, 768, 3, 3]).
	size mismatch for mono_decoder.resize_layers.3.bias: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_decoder.scratch.layer1_rn.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 96, 3, 3]).
	size mismatch for mono_decoder.scratch.layer2_rn.weight: copying a param with shape torch.Size([256, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 192, 3, 3]).
	size mismatch for mono_decoder.scratch.layer3_rn.weight: copying a param with shape torch.Size([256, 1024, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 384, 3, 3]).
	size mismatch for mono_decoder.scratch.layer4_rn.weight: copying a param with shape torch.Size([256, 1024, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 768, 3, 3]).
	size mismatch for mono_decoder.scratch.refinenet1.out_conv.weight: copying a param with shape torch.Size([256, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([128, 128, 1, 1]).
	size mismatch for mono_decoder.scratch.refinenet1.out_conv.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for mono_decoder.scratch.refinenet1.resConfUnit1.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 128, 3, 3]).
	size mismatch for mono_decoder.scratch.refinenet1.resConfUnit1.conv1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for mono_decoder.scratch.refinenet1.resConfUnit1.conv2.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 128, 3, 3]).
	size mismatch for mono_decoder.scratch.refinenet1.resConfUnit1.conv2.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for mono_decoder.scratch.refinenet1.resConfUnit2.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 128, 3, 3]).
	size mismatch for mono_decoder.scratch.refinenet1.resConfUnit2.conv1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for mono_decoder.scratch.refinenet1.resConfUnit2.conv2.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 128, 3, 3]).
	size mismatch for mono_decoder.scratch.refinenet1.resConfUnit2.conv2.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for mono_decoder.scratch.refinenet2.out_conv.weight: copying a param with shape torch.Size([256, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([128, 128, 1, 1]).
	size mismatch for mono_decoder.scratch.refinenet2.out_conv.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for mono_decoder.scratch.refinenet2.resConfUnit1.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 128, 3, 3]).
	size mismatch for mono_decoder.scratch.refinenet2.resConfUnit1.conv1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for mono_decoder.scratch.refinenet2.resConfUnit1.conv2.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 128, 3, 3]).
	size mismatch for mono_decoder.scratch.refinenet2.resConfUnit1.conv2.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for mono_decoder.scratch.refinenet2.resConfUnit2.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 128, 3, 3]).
	size mismatch for mono_decoder.scratch.refinenet2.resConfUnit2.conv1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for mono_decoder.scratch.refinenet2.resConfUnit2.conv2.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 128, 3, 3]).
	size mismatch for mono_decoder.scratch.refinenet2.resConfUnit2.conv2.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for mono_decoder.scratch.refinenet3.out_conv.weight: copying a param with shape torch.Size([256, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([128, 128, 1, 1]).
	size mismatch for mono_decoder.scratch.refinenet3.out_conv.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for mono_decoder.scratch.refinenet3.resConfUnit1.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 128, 3, 3]).
	size mismatch for mono_decoder.scratch.refinenet3.resConfUnit1.conv1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for mono_decoder.scratch.refinenet3.resConfUnit1.conv2.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 128, 3, 3]).
	size mismatch for mono_decoder.scratch.refinenet3.resConfUnit1.conv2.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for mono_decoder.scratch.refinenet3.resConfUnit2.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 128, 3, 3]).
	size mismatch for mono_decoder.scratch.refinenet3.resConfUnit2.conv1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for mono_decoder.scratch.refinenet3.resConfUnit2.conv2.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 128, 3, 3]).
	size mismatch for mono_decoder.scratch.refinenet3.resConfUnit2.conv2.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for mono_decoder.scratch.refinenet4.out_conv.weight: copying a param with shape torch.Size([256, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([128, 128, 1, 1]).
	size mismatch for mono_decoder.scratch.refinenet4.out_conv.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for mono_decoder.scratch.refinenet4.resConfUnit1.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 128, 3, 3]).
	size mismatch for mono_decoder.scratch.refinenet4.resConfUnit1.conv1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for mono_decoder.scratch.refinenet4.resConfUnit1.conv2.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 128, 3, 3]).
	size mismatch for mono_decoder.scratch.refinenet4.resConfUnit1.conv2.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for mono_decoder.scratch.refinenet4.resConfUnit2.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 128, 3, 3]).
	size mismatch for mono_decoder.scratch.refinenet4.resConfUnit2.conv1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for mono_decoder.scratch.refinenet4.resConfUnit2.conv2.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 128, 3, 3]).
	size mismatch for mono_decoder.scratch.refinenet4.resConfUnit2.conv2.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for mono_decoder.scratch.output_conv1.weight: copying a param with shape torch.Size([128, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 128, 3, 3]).
	size mismatch for mono_decoder.scratch.output_conv1.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([64]).
	size mismatch for mono_decoder.scratch.output_conv2.0.weight: copying a param with shape torch.Size([32, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([32, 64, 3, 3]).
	size mismatch for feat_decoder.projects.0.weight: copying a param with shape torch.Size([256, 1024, 1, 1]) from checkpoint, the shape in current model is torch.Size([96, 768, 1, 1]).
	size mismatch for feat_decoder.projects.0.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([96]).
	size mismatch for feat_decoder.projects.1.weight: copying a param with shape torch.Size([512, 1024, 1, 1]) from checkpoint, the shape in current model is torch.Size([192, 768, 1, 1]).
	size mismatch for feat_decoder.projects.1.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([192]).
	size mismatch for feat_decoder.projects.2.weight: copying a param with shape torch.Size([1024, 1024, 1, 1]) from checkpoint, the shape in current model is torch.Size([384, 768, 1, 1]).
	size mismatch for feat_decoder.projects.2.bias: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([384]).
	size mismatch for feat_decoder.projects.3.weight: copying a param with shape torch.Size([1024, 1024, 1, 1]) from checkpoint, the shape in current model is torch.Size([768, 768, 1, 1]).
	size mismatch for feat_decoder.projects.3.bias: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for feat_decoder.resize_layers.0.weight: copying a param with shape torch.Size([256, 256, 4, 4]) from checkpoint, the shape in current model is torch.Size([96, 96, 4, 4]).
	size mismatch for feat_decoder.resize_layers.0.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([96]).
	size mismatch for feat_decoder.resize_layers.1.weight: copying a param with shape torch.Size([512, 512, 2, 2]) from checkpoint, the shape in current model is torch.Size([192, 192, 2, 2]).
	size mismatch for feat_decoder.resize_layers.1.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([192]).
	size mismatch for feat_decoder.resize_layers.3.weight: copying a param with shape torch.Size([1024, 1024, 3, 3]) from checkpoint, the shape in current model is torch.Size([768, 768, 3, 3]).
	size mismatch for feat_decoder.resize_layers.3.bias: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for feat_decoder.scratch.layer1_rn.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 96, 3, 3]).
	size mismatch for feat_decoder.scratch.layer2_rn.weight: copying a param with shape torch.Size([256, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 192, 3, 3]).
	size mismatch for feat_decoder.scratch.layer3_rn.weight: copying a param with shape torch.Size([256, 1024, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 384, 3, 3]).
	size mismatch for feat_decoder.scratch.layer4_rn.weight: copying a param with shape torch.Size([256, 1024, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 768, 3, 3]).
	size mismatch for feat_decoder.scratch.refinenet1.out_conv.weight: copying a param with shape torch.Size([256, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([128, 128, 1, 1]).
	size mismatch for feat_decoder.scratch.refinenet1.out_conv.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for feat_decoder.scratch.refinenet1.resConfUnit1.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 128, 3, 3]).
	size mismatch for feat_decoder.scratch.refinenet1.resConfUnit1.conv1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for feat_decoder.scratch.refinenet1.resConfUnit1.conv2.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 128, 3, 3]).
	size mismatch for feat_decoder.scratch.refinenet1.resConfUnit1.conv2.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for feat_decoder.scratch.refinenet1.resConfUnit2.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 128, 3, 3]).
	size mismatch for feat_decoder.scratch.refinenet1.resConfUnit2.conv1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for feat_decoder.scratch.refinenet1.resConfUnit2.conv2.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 128, 3, 3]).
	size mismatch for feat_decoder.scratch.refinenet1.resConfUnit2.conv2.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for feat_decoder.scratch.refinenet2.out_conv.weight: copying a param with shape torch.Size([256, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([128, 128, 1, 1]).
	size mismatch for feat_decoder.scratch.refinenet2.out_conv.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for feat_decoder.scratch.refinenet2.resConfUnit1.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 128, 3, 3]).
	size mismatch for feat_decoder.scratch.refinenet2.resConfUnit1.conv1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for feat_decoder.scratch.refinenet2.resConfUnit1.conv2.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 128, 3, 3]).
	size mismatch for feat_decoder.scratch.refinenet2.resConfUnit1.conv2.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for feat_decoder.scratch.refinenet2.resConfUnit2.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 128, 3, 3]).
	size mismatch for feat_decoder.scratch.refinenet2.resConfUnit2.conv1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for feat_decoder.scratch.refinenet2.resConfUnit2.conv2.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 128, 3, 3]).
	size mismatch for feat_decoder.scratch.refinenet2.resConfUnit2.conv2.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for feat_decoder.scratch.refinenet3.out_conv.weight: copying a param with shape torch.Size([256, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([128, 128, 1, 1]).
	size mismatch for feat_decoder.scratch.refinenet3.out_conv.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for feat_decoder.scratch.refinenet3.resConfUnit1.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 128, 3, 3]).
	size mismatch for feat_decoder.scratch.refinenet3.resConfUnit1.conv1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for feat_decoder.scratch.refinenet3.resConfUnit1.conv2.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 128, 3, 3]).
	size mismatch for feat_decoder.scratch.refinenet3.resConfUnit1.conv2.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for feat_decoder.scratch.refinenet3.resConfUnit2.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 128, 3, 3]).
	size mismatch for feat_decoder.scratch.refinenet3.resConfUnit2.conv1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for feat_decoder.scratch.refinenet3.resConfUnit2.conv2.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 128, 3, 3]).
	size mismatch for feat_decoder.scratch.refinenet3.resConfUnit2.conv2.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for feat_decoder.scratch.refinenet4.out_conv.weight: copying a param with shape torch.Size([256, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([128, 128, 1, 1]).
	size mismatch for feat_decoder.scratch.refinenet4.out_conv.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for feat_decoder.scratch.refinenet4.resConfUnit1.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 128, 3, 3]).
	size mismatch for feat_decoder.scratch.refinenet4.resConfUnit1.conv1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for feat_decoder.scratch.refinenet4.resConfUnit1.conv2.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 128, 3, 3]).
	size mismatch for feat_decoder.scratch.refinenet4.resConfUnit1.conv2.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for feat_decoder.scratch.refinenet4.resConfUnit2.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 128, 3, 3]).
	size mismatch for feat_decoder.scratch.refinenet4.resConfUnit2.conv1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for feat_decoder.scratch.refinenet4.resConfUnit2.conv2.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 128, 3, 3]).
	size mismatch for feat_decoder.scratch.refinenet4.resConfUnit2.conv2.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([128]).

Set the environment variable HYDRA_FULL_ERROR=1 for a complete stack trace.
Error executing job with overrides: []
Traceback (most recent call last):
  File "train_whu.py", line 119, in main
    model.load_state_dict(ckpt, strict=True)
  File "/home/s0214/.conda/envs/monster/lib/python3.8/site-packages/torch/nn/modules/module.py", line 2152, in load_state_dict
    raise RuntimeError('Error(s) in loading state_dict for {}:\n\t{}'.format(
RuntimeError: Error(s) in loading state_dict for Monster:
	Unexpected key(s) in state_dict: "mono_encoder.blocks.12.norm1.weight", "mono_encoder.blocks.12.norm1.bias", "mono_encoder.blocks.12.attn.qkv.weight", "mono_encoder.blocks.12.attn.qkv.bias", "mono_encoder.blocks.12.attn.proj.weight", "mono_encoder.blocks.12.attn.proj.bias", "mono_encoder.blocks.12.ls1.gamma", "mono_encoder.blocks.12.norm2.weight", "mono_encoder.blocks.12.norm2.bias", "mono_encoder.blocks.12.mlp.fc1.weight", "mono_encoder.blocks.12.mlp.fc1.bias", "mono_encoder.blocks.12.mlp.fc2.weight", "mono_encoder.blocks.12.mlp.fc2.bias", "mono_encoder.blocks.12.ls2.gamma", "mono_encoder.blocks.13.norm1.weight", "mono_encoder.blocks.13.norm1.bias", "mono_encoder.blocks.13.attn.qkv.weight", "mono_encoder.blocks.13.attn.qkv.bias", "mono_encoder.blocks.13.attn.proj.weight", "mono_encoder.blocks.13.attn.proj.bias", "mono_encoder.blocks.13.ls1.gamma", "mono_encoder.blocks.13.norm2.weight", "mono_encoder.blocks.13.norm2.bias", "mono_encoder.blocks.13.mlp.fc1.weight", "mono_encoder.blocks.13.mlp.fc1.bias", "mono_encoder.blocks.13.mlp.fc2.weight", "mono_encoder.blocks.13.mlp.fc2.bias", "mono_encoder.blocks.13.ls2.gamma", "mono_encoder.blocks.14.norm1.weight", "mono_encoder.blocks.14.norm1.bias", "mono_encoder.blocks.14.attn.qkv.weight", "mono_encoder.blocks.14.attn.qkv.bias", "mono_encoder.blocks.14.attn.proj.weight", "mono_encoder.blocks.14.attn.proj.bias", "mono_encoder.blocks.14.ls1.gamma", "mono_encoder.blocks.14.norm2.weight", "mono_encoder.blocks.14.norm2.bias", "mono_encoder.blocks.14.mlp.fc1.weight", "mono_encoder.blocks.14.mlp.fc1.bias", "mono_encoder.blocks.14.mlp.fc2.weight", "mono_encoder.blocks.14.mlp.fc2.bias", "mono_encoder.blocks.14.ls2.gamma", "mono_encoder.blocks.15.norm1.weight", "mono_encoder.blocks.15.norm1.bias", "mono_encoder.blocks.15.attn.qkv.weight", "mono_encoder.blocks.15.attn.qkv.bias", "mono_encoder.blocks.15.attn.proj.weight", "mono_encoder.blocks.15.attn.proj.bias", "mono_encoder.blocks.15.ls1.gamma", "mono_encoder.blocks.15.norm2.weight", "mono_encoder.blocks.15.norm2.bias", "mono_encoder.blocks.15.mlp.fc1.weight", "mono_encoder.blocks.15.mlp.fc1.bias", "mono_encoder.blocks.15.mlp.fc2.weight", "mono_encoder.blocks.15.mlp.fc2.bias", "mono_encoder.blocks.15.ls2.gamma", "mono_encoder.blocks.16.norm1.weight", "mono_encoder.blocks.16.norm1.bias", "mono_encoder.blocks.16.attn.qkv.weight", "mono_encoder.blocks.16.attn.qkv.bias", "mono_encoder.blocks.16.attn.proj.weight", "mono_encoder.blocks.16.attn.proj.bias", "mono_encoder.blocks.16.ls1.gamma", "mono_encoder.blocks.16.norm2.weight", "mono_encoder.blocks.16.norm2.bias", "mono_encoder.blocks.16.mlp.fc1.weight", "mono_encoder.blocks.16.mlp.fc1.bias", "mono_encoder.blocks.16.mlp.fc2.weight", "mono_encoder.blocks.16.mlp.fc2.bias", "mono_encoder.blocks.16.ls2.gamma", "mono_encoder.blocks.17.norm1.weight", "mono_encoder.blocks.17.norm1.bias", "mono_encoder.blocks.17.attn.qkv.weight", "mono_encoder.blocks.17.attn.qkv.bias", "mono_encoder.blocks.17.attn.proj.weight", "mono_encoder.blocks.17.attn.proj.bias", "mono_encoder.blocks.17.ls1.gamma", "mono_encoder.blocks.17.norm2.weight", "mono_encoder.blocks.17.norm2.bias", "mono_encoder.blocks.17.mlp.fc1.weight", "mono_encoder.blocks.17.mlp.fc1.bias", "mono_encoder.blocks.17.mlp.fc2.weight", "mono_encoder.blocks.17.mlp.fc2.bias", "mono_encoder.blocks.17.ls2.gamma", "mono_encoder.blocks.18.norm1.weight", "mono_encoder.blocks.18.norm1.bias", "mono_encoder.blocks.18.attn.qkv.weight", "mono_encoder.blocks.18.attn.qkv.bias", "mono_encoder.blocks.18.attn.proj.weight", "mono_encoder.blocks.18.attn.proj.bias", "mono_encoder.blocks.18.ls1.gamma", "mono_encoder.blocks.18.norm2.weight", "mono_encoder.blocks.18.norm2.bias", "mono_encoder.blocks.18.mlp.fc1.weight", "mono_encoder.blocks.18.mlp.fc1.bias", "mono_encoder.blocks.18.mlp.fc2.weight", "mono_encoder.blocks.18.mlp.fc2.bias", "mono_encoder.blocks.18.ls2.gamma", "mono_encoder.blocks.19.norm1.weight", "mono_encoder.blocks.19.norm1.bias", "mono_encoder.blocks.19.attn.qkv.weight", "mono_encoder.blocks.19.attn.qkv.bias", "mono_encoder.blocks.19.attn.proj.weight", "mono_encoder.blocks.19.attn.proj.bias", "mono_encoder.blocks.19.ls1.gamma", "mono_encoder.blocks.19.norm2.weight", "mono_encoder.blocks.19.norm2.bias", "mono_encoder.blocks.19.mlp.fc1.weight", "mono_encoder.blocks.19.mlp.fc1.bias", "mono_encoder.blocks.19.mlp.fc2.weight", "mono_encoder.blocks.19.mlp.fc2.bias", "mono_encoder.blocks.19.ls2.gamma", "mono_encoder.blocks.20.norm1.weight", "mono_encoder.blocks.20.norm1.bias", "mono_encoder.blocks.20.attn.qkv.weight", "mono_encoder.blocks.20.attn.qkv.bias", "mono_encoder.blocks.20.attn.proj.weight", "mono_encoder.blocks.20.attn.proj.bias", "mono_encoder.blocks.20.ls1.gamma", "mono_encoder.blocks.20.norm2.weight", "mono_encoder.blocks.20.norm2.bias", "mono_encoder.blocks.20.mlp.fc1.weight", "mono_encoder.blocks.20.mlp.fc1.bias", "mono_encoder.blocks.20.mlp.fc2.weight", "mono_encoder.blocks.20.mlp.fc2.bias", "mono_encoder.blocks.20.ls2.gamma", "mono_encoder.blocks.21.norm1.weight", "mono_encoder.blocks.21.norm1.bias", "mono_encoder.blocks.21.attn.qkv.weight", "mono_encoder.blocks.21.attn.qkv.bias", "mono_encoder.blocks.21.attn.proj.weight", "mono_encoder.blocks.21.attn.proj.bias", "mono_encoder.blocks.21.ls1.gamma", "mono_encoder.blocks.21.norm2.weight", "mono_encoder.blocks.21.norm2.bias", "mono_encoder.blocks.21.mlp.fc1.weight", "mono_encoder.blocks.21.mlp.fc1.bias", "mono_encoder.blocks.21.mlp.fc2.weight", "mono_encoder.blocks.21.mlp.fc2.bias", "mono_encoder.blocks.21.ls2.gamma", "mono_encoder.blocks.22.norm1.weight", "mono_encoder.blocks.22.norm1.bias", "mono_encoder.blocks.22.attn.qkv.weight", "mono_encoder.blocks.22.attn.qkv.bias", "mono_encoder.blocks.22.attn.proj.weight", "mono_encoder.blocks.22.attn.proj.bias", "mono_encoder.blocks.22.ls1.gamma", "mono_encoder.blocks.22.norm2.weight", "mono_encoder.blocks.22.norm2.bias", "mono_encoder.blocks.22.mlp.fc1.weight", "mono_encoder.blocks.22.mlp.fc1.bias", "mono_encoder.blocks.22.mlp.fc2.weight", "mono_encoder.blocks.22.mlp.fc2.bias", "mono_encoder.blocks.22.ls2.gamma", "mono_encoder.blocks.23.norm1.weight", "mono_encoder.blocks.23.norm1.bias", "mono_encoder.blocks.23.attn.qkv.weight", "mono_encoder.blocks.23.attn.qkv.bias", "mono_encoder.blocks.23.attn.proj.weight", "mono_encoder.blocks.23.attn.proj.bias", "mono_encoder.blocks.23.ls1.gamma", "mono_encoder.blocks.23.norm2.weight", "mono_encoder.blocks.23.norm2.bias", "mono_encoder.blocks.23.mlp.fc1.weight", "mono_encoder.blocks.23.mlp.fc1.bias", "mono_encoder.blocks.23.mlp.fc2.weight", "mono_encoder.blocks.23.mlp.fc2.bias", "mono_encoder.blocks.23.ls2.gamma". 
	size mismatch for feat_transfer.conv4x.0.weight: copying a param with shape torch.Size([48, 304, 5, 5]) from checkpoint, the shape in current model is torch.Size([48, 176, 5, 5]).
	size mismatch for feat_transfer.conv8x.0.weight: copying a param with shape torch.Size([64, 320, 5, 5]) from checkpoint, the shape in current model is torch.Size([64, 192, 5, 5]).
	size mismatch for feat_transfer.conv16x.0.weight: copying a param with shape torch.Size([192, 448, 5, 5]) from checkpoint, the shape in current model is torch.Size([192, 320, 5, 5]).
	size mismatch for feat_transfer.conv32x.0.weight: copying a param with shape torch.Size([160, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([160, 128, 3, 3]).
	size mismatch for feat_transfer.res_16x.weight: copying a param with shape torch.Size([192, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([192, 128, 1, 1]).
	size mismatch for feat_transfer.res_8x.weight: copying a param with shape torch.Size([64, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([64, 128, 1, 1]).
	size mismatch for feat_transfer.res_4x.weight: copying a param with shape torch.Size([48, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([48, 128, 1, 1]).
	size mismatch for feat_transfer_cnet.res_16x.weight: copying a param with shape torch.Size([128, 448, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 320, 3, 3]).
	size mismatch for feat_transfer_cnet.res_8x.weight: copying a param with shape torch.Size([128, 352, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 224, 3, 3]).
	size mismatch for feat_transfer_cnet.res_4x.weight: copying a param with shape torch.Size([128, 304, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 176, 3, 3]).
	size mismatch for mono_encoder.cls_token: copying a param with shape torch.Size([1, 1, 1024]) from checkpoint, the shape in current model is torch.Size([1, 1, 768]).
	size mismatch for mono_encoder.pos_embed: copying a param with shape torch.Size([1, 1370, 1024]) from checkpoint, the shape in current model is torch.Size([1, 1370, 768]).
	size mismatch for mono_encoder.mask_token: copying a param with shape torch.Size([1, 1024]) from checkpoint, the shape in current model is torch.Size([1, 768]).
	size mismatch for mono_encoder.patch_embed.proj.weight: copying a param with shape torch.Size([1024, 3, 14, 14]) from checkpoint, the shape in current model is torch.Size([768, 3, 14, 14]).
	size mismatch for mono_encoder.patch_embed.proj.bias: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.0.norm1.weight: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.0.norm1.bias: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.0.attn.qkv.weight: copying a param with shape torch.Size([3072, 1024]) from checkpoint, the shape in current model is torch.Size([2304, 768]).
	size mismatch for mono_encoder.blocks.0.attn.qkv.bias: copying a param with shape torch.Size([3072]) from checkpoint, the shape in current model is torch.Size([2304]).
	size mismatch for mono_encoder.blocks.0.attn.proj.weight: copying a param with shape torch.Size([1024, 1024]) from checkpoint, the shape in current model is torch.Size([768, 768]).
	size mismatch for mono_encoder.blocks.0.attn.proj.bias: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.0.ls1.gamma: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.0.norm2.weight: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.0.norm2.bias: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.0.mlp.fc1.weight: copying a param with shape torch.Size([4096, 1024]) from checkpoint, the shape in current model is torch.Size([3072, 768]).
	size mismatch for mono_encoder.blocks.0.mlp.fc1.bias: copying a param with shape torch.Size([4096]) from checkpoint, the shape in current model is torch.Size([3072]).
	size mismatch for mono_encoder.blocks.0.mlp.fc2.weight: copying a param with shape torch.Size([1024, 4096]) from checkpoint, the shape in current model is torch.Size([768, 3072]).
	size mismatch for mono_encoder.blocks.0.mlp.fc2.bias: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.0.ls2.gamma: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.1.norm1.weight: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.1.norm1.bias: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.1.attn.qkv.weight: copying a param with shape torch.Size([3072, 1024]) from checkpoint, the shape in current model is torch.Size([2304, 768]).
	size mismatch for mono_encoder.blocks.1.attn.qkv.bias: copying a param with shape torch.Size([3072]) from checkpoint, the shape in current model is torch.Size([2304]).
	size mismatch for mono_encoder.blocks.1.attn.proj.weight: copying a param with shape torch.Size([1024, 1024]) from checkpoint, the shape in current model is torch.Size([768, 768]).
	size mismatch for mono_encoder.blocks.1.attn.proj.bias: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.1.ls1.gamma: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.1.norm2.weight: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.1.norm2.bias: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.1.mlp.fc1.weight: copying a param with shape torch.Size([4096, 1024]) from checkpoint, the shape in current model is torch.Size([3072, 768]).
	size mismatch for mono_encoder.blocks.1.mlp.fc1.bias: copying a param with shape torch.Size([4096]) from checkpoint, the shape in current model is torch.Size([3072]).
	size mismatch for mono_encoder.blocks.1.mlp.fc2.weight: copying a param with shape torch.Size([1024, 4096]) from checkpoint, the shape in current model is torch.Size([768, 3072]).
	size mismatch for mono_encoder.blocks.1.mlp.fc2.bias: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.1.ls2.gamma: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.2.norm1.weight: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.2.norm1.bias: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.2.attn.qkv.weight: copying a param with shape torch.Size([3072, 1024]) from checkpoint, the shape in current model is torch.Size([2304, 768]).
	size mismatch for mono_encoder.blocks.2.attn.qkv.bias: copying a param with shape torch.Size([3072]) from checkpoint, the shape in current model is torch.Size([2304]).
	size mismatch for mono_encoder.blocks.2.attn.proj.weight: copying a param with shape torch.Size([1024, 1024]) from checkpoint, the shape in current model is torch.Size([768, 768]).
	size mismatch for mono_encoder.blocks.2.attn.proj.bias: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.2.ls1.gamma: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.2.norm2.weight: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.2.norm2.bias: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.2.mlp.fc1.weight: copying a param with shape torch.Size([4096, 1024]) from checkpoint, the shape in current model is torch.Size([3072, 768]).
	size mismatch for mono_encoder.blocks.2.mlp.fc1.bias: copying a param with shape torch.Size([4096]) from checkpoint, the shape in current model is torch.Size([3072]).
	size mismatch for mono_encoder.blocks.2.mlp.fc2.weight: copying a param with shape torch.Size([1024, 4096]) from checkpoint, the shape in current model is torch.Size([768, 3072]).
	size mismatch for mono_encoder.blocks.2.mlp.fc2.bias: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.2.ls2.gamma: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.3.norm1.weight: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.3.norm1.bias: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.3.attn.qkv.weight: copying a param with shape torch.Size([3072, 1024]) from checkpoint, the shape in current model is torch.Size([2304, 768]).
	size mismatch for mono_encoder.blocks.3.attn.qkv.bias: copying a param with shape torch.Size([3072]) from checkpoint, the shape in current model is torch.Size([2304]).
	size mismatch for mono_encoder.blocks.3.attn.proj.weight: copying a param with shape torch.Size([1024, 1024]) from checkpoint, the shape in current model is torch.Size([768, 768]).
	size mismatch for mono_encoder.blocks.3.attn.proj.bias: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.3.ls1.gamma: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.3.norm2.weight: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.3.norm2.bias: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.3.mlp.fc1.weight: copying a param with shape torch.Size([4096, 1024]) from checkpoint, the shape in current model is torch.Size([3072, 768]).
	size mismatch for mono_encoder.blocks.3.mlp.fc1.bias: copying a param with shape torch.Size([4096]) from checkpoint, the shape in current model is torch.Size([3072]).
	size mismatch for mono_encoder.blocks.3.mlp.fc2.weight: copying a param with shape torch.Size([1024, 4096]) from checkpoint, the shape in current model is torch.Size([768, 3072]).
	size mismatch for mono_encoder.blocks.3.mlp.fc2.bias: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.3.ls2.gamma: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.4.norm1.weight: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.4.norm1.bias: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.4.attn.qkv.weight: copying a param with shape torch.Size([3072, 1024]) from checkpoint, the shape in current model is torch.Size([2304, 768]).
	size mismatch for mono_encoder.blocks.4.attn.qkv.bias: copying a param with shape torch.Size([3072]) from checkpoint, the shape in current model is torch.Size([2304]).
	size mismatch for mono_encoder.blocks.4.attn.proj.weight: copying a param with shape torch.Size([1024, 1024]) from checkpoint, the shape in current model is torch.Size([768, 768]).
	size mismatch for mono_encoder.blocks.4.attn.proj.bias: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.4.ls1.gamma: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.4.norm2.weight: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.4.norm2.bias: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.4.mlp.fc1.weight: copying a param with shape torch.Size([4096, 1024]) from checkpoint, the shape in current model is torch.Size([3072, 768]).
	size mismatch for mono_encoder.blocks.4.mlp.fc1.bias: copying a param with shape torch.Size([4096]) from checkpoint, the shape in current model is torch.Size([3072]).
	size mismatch for mono_encoder.blocks.4.mlp.fc2.weight: copying a param with shape torch.Size([1024, 4096]) from checkpoint, the shape in current model is torch.Size([768, 3072]).
	size mismatch for mono_encoder.blocks.4.mlp.fc2.bias: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.4.ls2.gamma: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.5.norm1.weight: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.5.norm1.bias: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.5.attn.qkv.weight: copying a param with shape torch.Size([3072, 1024]) from checkpoint, the shape in current model is torch.Size([2304, 768]).
	size mismatch for mono_encoder.blocks.5.attn.qkv.bias: copying a param with shape torch.Size([3072]) from checkpoint, the shape in current model is torch.Size([2304]).
	size mismatch for mono_encoder.blocks.5.attn.proj.weight: copying a param with shape torch.Size([1024, 1024]) from checkpoint, the shape in current model is torch.Size([768, 768]).
	size mismatch for mono_encoder.blocks.5.attn.proj.bias: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.5.ls1.gamma: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.5.norm2.weight: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.5.norm2.bias: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.5.mlp.fc1.weight: copying a param with shape torch.Size([4096, 1024]) from checkpoint, the shape in current model is torch.Size([3072, 768]).
	size mismatch for mono_encoder.blocks.5.mlp.fc1.bias: copying a param with shape torch.Size([4096]) from checkpoint, the shape in current model is torch.Size([3072]).
	size mismatch for mono_encoder.blocks.5.mlp.fc2.weight: copying a param with shape torch.Size([1024, 4096]) from checkpoint, the shape in current model is torch.Size([768, 3072]).
	size mismatch for mono_encoder.blocks.5.mlp.fc2.bias: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.5.ls2.gamma: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.6.norm1.weight: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.6.norm1.bias: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.6.attn.qkv.weight: copying a param with shape torch.Size([3072, 1024]) from checkpoint, the shape in current model is torch.Size([2304, 768]).
	size mismatch for mono_encoder.blocks.6.attn.qkv.bias: copying a param with shape torch.Size([3072]) from checkpoint, the shape in current model is torch.Size([2304]).
	size mismatch for mono_encoder.blocks.6.attn.proj.weight: copying a param with shape torch.Size([1024, 1024]) from checkpoint, the shape in current model is torch.Size([768, 768]).
	size mismatch for mono_encoder.blocks.6.attn.proj.bias: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.6.ls1.gamma: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.6.norm2.weight: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.6.norm2.bias: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.6.mlp.fc1.weight: copying a param with shape torch.Size([4096, 1024]) from checkpoint, the shape in current model is torch.Size([3072, 768]).
	size mismatch for mono_encoder.blocks.6.mlp.fc1.bias: copying a param with shape torch.Size([4096]) from checkpoint, the shape in current model is torch.Size([3072]).
	size mismatch for mono_encoder.blocks.6.mlp.fc2.weight: copying a param with shape torch.Size([1024, 4096]) from checkpoint, the shape in current model is torch.Size([768, 3072]).
	size mismatch for mono_encoder.blocks.6.mlp.fc2.bias: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.6.ls2.gamma: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.7.norm1.weight: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.7.norm1.bias: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.7.attn.qkv.weight: copying a param with shape torch.Size([3072, 1024]) from checkpoint, the shape in current model is torch.Size([2304, 768]).
	size mismatch for mono_encoder.blocks.7.attn.qkv.bias: copying a param with shape torch.Size([3072]) from checkpoint, the shape in current model is torch.Size([2304]).
	size mismatch for mono_encoder.blocks.7.attn.proj.weight: copying a param with shape torch.Size([1024, 1024]) from checkpoint, the shape in current model is torch.Size([768, 768]).
	size mismatch for mono_encoder.blocks.7.attn.proj.bias: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.7.ls1.gamma: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.7.norm2.weight: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.7.norm2.bias: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.7.mlp.fc1.weight: copying a param with shape torch.Size([4096, 1024]) from checkpoint, the shape in current model is torch.Size([3072, 768]).
	size mismatch for mono_encoder.blocks.7.mlp.fc1.bias: copying a param with shape torch.Size([4096]) from checkpoint, the shape in current model is torch.Size([3072]).
	size mismatch for mono_encoder.blocks.7.mlp.fc2.weight: copying a param with shape torch.Size([1024, 4096]) from checkpoint, the shape in current model is torch.Size([768, 3072]).
	size mismatch for mono_encoder.blocks.7.mlp.fc2.bias: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.7.ls2.gamma: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.8.norm1.weight: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.8.norm1.bias: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.8.attn.qkv.weight: copying a param with shape torch.Size([3072, 1024]) from checkpoint, the shape in current model is torch.Size([2304, 768]).
	size mismatch for mono_encoder.blocks.8.attn.qkv.bias: copying a param with shape torch.Size([3072]) from checkpoint, the shape in current model is torch.Size([2304]).
	size mismatch for mono_encoder.blocks.8.attn.proj.weight: copying a param with shape torch.Size([1024, 1024]) from checkpoint, the shape in current model is torch.Size([768, 768]).
	size mismatch for mono_encoder.blocks.8.attn.proj.bias: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.8.ls1.gamma: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.8.norm2.weight: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.8.norm2.bias: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.8.mlp.fc1.weight: copying a param with shape torch.Size([4096, 1024]) from checkpoint, the shape in current model is torch.Size([3072, 768]).
	size mismatch for mono_encoder.blocks.8.mlp.fc1.bias: copying a param with shape torch.Size([4096]) from checkpoint, the shape in current model is torch.Size([3072]).
	size mismatch for mono_encoder.blocks.8.mlp.fc2.weight: copying a param with shape torch.Size([1024, 4096]) from checkpoint, the shape in current model is torch.Size([768, 3072]).
	size mismatch for mono_encoder.blocks.8.mlp.fc2.bias: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.8.ls2.gamma: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.9.norm1.weight: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.9.norm1.bias: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.9.attn.qkv.weight: copying a param with shape torch.Size([3072, 1024]) from checkpoint, the shape in current model is torch.Size([2304, 768]).
	size mismatch for mono_encoder.blocks.9.attn.qkv.bias: copying a param with shape torch.Size([3072]) from checkpoint, the shape in current model is torch.Size([2304]).
	size mismatch for mono_encoder.blocks.9.attn.proj.weight: copying a param with shape torch.Size([1024, 1024]) from checkpoint, the shape in current model is torch.Size([768, 768]).
	size mismatch for mono_encoder.blocks.9.attn.proj.bias: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.9.ls1.gamma: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.9.norm2.weight: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.9.norm2.bias: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.9.mlp.fc1.weight: copying a param with shape torch.Size([4096, 1024]) from checkpoint, the shape in current model is torch.Size([3072, 768]).
	size mismatch for mono_encoder.blocks.9.mlp.fc1.bias: copying a param with shape torch.Size([4096]) from checkpoint, the shape in current model is torch.Size([3072]).
	size mismatch for mono_encoder.blocks.9.mlp.fc2.weight: copying a param with shape torch.Size([1024, 4096]) from checkpoint, the shape in current model is torch.Size([768, 3072]).
	size mismatch for mono_encoder.blocks.9.mlp.fc2.bias: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.9.ls2.gamma: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.10.norm1.weight: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.10.norm1.bias: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.10.attn.qkv.weight: copying a param with shape torch.Size([3072, 1024]) from checkpoint, the shape in current model is torch.Size([2304, 768]).
	size mismatch for mono_encoder.blocks.10.attn.qkv.bias: copying a param with shape torch.Size([3072]) from checkpoint, the shape in current model is torch.Size([2304]).
	size mismatch for mono_encoder.blocks.10.attn.proj.weight: copying a param with shape torch.Size([1024, 1024]) from checkpoint, the shape in current model is torch.Size([768, 768]).
	size mismatch for mono_encoder.blocks.10.attn.proj.bias: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.10.ls1.gamma: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.10.norm2.weight: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.10.norm2.bias: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.10.mlp.fc1.weight: copying a param with shape torch.Size([4096, 1024]) from checkpoint, the shape in current model is torch.Size([3072, 768]).
	size mismatch for mono_encoder.blocks.10.mlp.fc1.bias: copying a param with shape torch.Size([4096]) from checkpoint, the shape in current model is torch.Size([3072]).
	size mismatch for mono_encoder.blocks.10.mlp.fc2.weight: copying a param with shape torch.Size([1024, 4096]) from checkpoint, the shape in current model is torch.Size([768, 3072]).
	size mismatch for mono_encoder.blocks.10.mlp.fc2.bias: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.10.ls2.gamma: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.11.norm1.weight: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.11.norm1.bias: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.11.attn.qkv.weight: copying a param with shape torch.Size([3072, 1024]) from checkpoint, the shape in current model is torch.Size([2304, 768]).
	size mismatch for mono_encoder.blocks.11.attn.qkv.bias: copying a param with shape torch.Size([3072]) from checkpoint, the shape in current model is torch.Size([2304]).
	size mismatch for mono_encoder.blocks.11.attn.proj.weight: copying a param with shape torch.Size([1024, 1024]) from checkpoint, the shape in current model is torch.Size([768, 768]).
	size mismatch for mono_encoder.blocks.11.attn.proj.bias: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.11.ls1.gamma: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.11.norm2.weight: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.11.norm2.bias: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.11.mlp.fc1.weight: copying a param with shape torch.Size([4096, 1024]) from checkpoint, the shape in current model is torch.Size([3072, 768]).
	size mismatch for mono_encoder.blocks.11.mlp.fc1.bias: copying a param with shape torch.Size([4096]) from checkpoint, the shape in current model is torch.Size([3072]).
	size mismatch for mono_encoder.blocks.11.mlp.fc2.weight: copying a param with shape torch.Size([1024, 4096]) from checkpoint, the shape in current model is torch.Size([768, 3072]).
	size mismatch for mono_encoder.blocks.11.mlp.fc2.bias: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.blocks.11.ls2.gamma: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.norm.weight: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_encoder.norm.bias: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_decoder.projects.0.weight: copying a param with shape torch.Size([256, 1024, 1, 1]) from checkpoint, the shape in current model is torch.Size([96, 768, 1, 1]).
	size mismatch for mono_decoder.projects.0.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([96]).
	size mismatch for mono_decoder.projects.1.weight: copying a param with shape torch.Size([512, 1024, 1, 1]) from checkpoint, the shape in current model is torch.Size([192, 768, 1, 1]).
	size mismatch for mono_decoder.projects.1.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([192]).
	size mismatch for mono_decoder.projects.2.weight: copying a param with shape torch.Size([1024, 1024, 1, 1]) from checkpoint, the shape in current model is torch.Size([384, 768, 1, 1]).
	size mismatch for mono_decoder.projects.2.bias: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([384]).
	size mismatch for mono_decoder.projects.3.weight: copying a param with shape torch.Size([1024, 1024, 1, 1]) from checkpoint, the shape in current model is torch.Size([768, 768, 1, 1]).
	size mismatch for mono_decoder.projects.3.bias: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_decoder.resize_layers.0.weight: copying a param with shape torch.Size([256, 256, 4, 4]) from checkpoint, the shape in current model is torch.Size([96, 96, 4, 4]).
	size mismatch for mono_decoder.resize_layers.0.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([96]).
	size mismatch for mono_decoder.resize_layers.1.weight: copying a param with shape torch.Size([512, 512, 2, 2]) from checkpoint, the shape in current model is torch.Size([192, 192, 2, 2]).
	size mismatch for mono_decoder.resize_layers.1.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([192]).
	size mismatch for mono_decoder.resize_layers.3.weight: copying a param with shape torch.Size([1024, 1024, 3, 3]) from checkpoint, the shape in current model is torch.Size([768, 768, 3, 3]).
	size mismatch for mono_decoder.resize_layers.3.bias: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for mono_decoder.scratch.layer1_rn.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 96, 3, 3]).
	size mismatch for mono_decoder.scratch.layer2_rn.weight: copying a param with shape torch.Size([256, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 192, 3, 3]).
	size mismatch for mono_decoder.scratch.layer3_rn.weight: copying a param with shape torch.Size([256, 1024, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 384, 3, 3]).
	size mismatch for mono_decoder.scratch.layer4_rn.weight: copying a param with shape torch.Size([256, 1024, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 768, 3, 3]).
	size mismatch for mono_decoder.scratch.refinenet1.out_conv.weight: copying a param with shape torch.Size([256, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([128, 128, 1, 1]).
	size mismatch for mono_decoder.scratch.refinenet1.out_conv.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for mono_decoder.scratch.refinenet1.resConfUnit1.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 128, 3, 3]).
	size mismatch for mono_decoder.scratch.refinenet1.resConfUnit1.conv1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for mono_decoder.scratch.refinenet1.resConfUnit1.conv2.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 128, 3, 3]).
	size mismatch for mono_decoder.scratch.refinenet1.resConfUnit1.conv2.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for mono_decoder.scratch.refinenet1.resConfUnit2.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 128, 3, 3]).
	size mismatch for mono_decoder.scratch.refinenet1.resConfUnit2.conv1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for mono_decoder.scratch.refinenet1.resConfUnit2.conv2.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 128, 3, 3]).
	size mismatch for mono_decoder.scratch.refinenet1.resConfUnit2.conv2.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for mono_decoder.scratch.refinenet2.out_conv.weight: copying a param with shape torch.Size([256, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([128, 128, 1, 1]).
	size mismatch for mono_decoder.scratch.refinenet2.out_conv.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for mono_decoder.scratch.refinenet2.resConfUnit1.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 128, 3, 3]).
	size mismatch for mono_decoder.scratch.refinenet2.resConfUnit1.conv1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for mono_decoder.scratch.refinenet2.resConfUnit1.conv2.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 128, 3, 3]).
	size mismatch for mono_decoder.scratch.refinenet2.resConfUnit1.conv2.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for mono_decoder.scratch.refinenet2.resConfUnit2.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 128, 3, 3]).
	size mismatch for mono_decoder.scratch.refinenet2.resConfUnit2.conv1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for mono_decoder.scratch.refinenet2.resConfUnit2.conv2.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 128, 3, 3]).
	size mismatch for mono_decoder.scratch.refinenet2.resConfUnit2.conv2.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for mono_decoder.scratch.refinenet3.out_conv.weight: copying a param with shape torch.Size([256, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([128, 128, 1, 1]).
	size mismatch for mono_decoder.scratch.refinenet3.out_conv.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for mono_decoder.scratch.refinenet3.resConfUnit1.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 128, 3, 3]).
	size mismatch for mono_decoder.scratch.refinenet3.resConfUnit1.conv1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for mono_decoder.scratch.refinenet3.resConfUnit1.conv2.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 128, 3, 3]).
	size mismatch for mono_decoder.scratch.refinenet3.resConfUnit1.conv2.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for mono_decoder.scratch.refinenet3.resConfUnit2.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 128, 3, 3]).
	size mismatch for mono_decoder.scratch.refinenet3.resConfUnit2.conv1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for mono_decoder.scratch.refinenet3.resConfUnit2.conv2.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 128, 3, 3]).
	size mismatch for mono_decoder.scratch.refinenet3.resConfUnit2.conv2.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for mono_decoder.scratch.refinenet4.out_conv.weight: copying a param with shape torch.Size([256, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([128, 128, 1, 1]).
	size mismatch for mono_decoder.scratch.refinenet4.out_conv.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for mono_decoder.scratch.refinenet4.resConfUnit1.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 128, 3, 3]).
	size mismatch for mono_decoder.scratch.refinenet4.resConfUnit1.conv1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for mono_decoder.scratch.refinenet4.resConfUnit1.conv2.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 128, 3, 3]).
	size mismatch for mono_decoder.scratch.refinenet4.resConfUnit1.conv2.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for mono_decoder.scratch.refinenet4.resConfUnit2.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 128, 3, 3]).
	size mismatch for mono_decoder.scratch.refinenet4.resConfUnit2.conv1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for mono_decoder.scratch.refinenet4.resConfUnit2.conv2.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 128, 3, 3]).
	size mismatch for mono_decoder.scratch.refinenet4.resConfUnit2.conv2.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for mono_decoder.scratch.output_conv1.weight: copying a param with shape torch.Size([128, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 128, 3, 3]).
	size mismatch for mono_decoder.scratch.output_conv1.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([64]).
	size mismatch for mono_decoder.scratch.output_conv2.0.weight: copying a param with shape torch.Size([32, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([32, 64, 3, 3]).
	size mismatch for feat_decoder.projects.0.weight: copying a param with shape torch.Size([256, 1024, 1, 1]) from checkpoint, the shape in current model is torch.Size([96, 768, 1, 1]).
	size mismatch for feat_decoder.projects.0.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([96]).
	size mismatch for feat_decoder.projects.1.weight: copying a param with shape torch.Size([512, 1024, 1, 1]) from checkpoint, the shape in current model is torch.Size([192, 768, 1, 1]).
	size mismatch for feat_decoder.projects.1.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([192]).
	size mismatch for feat_decoder.projects.2.weight: copying a param with shape torch.Size([1024, 1024, 1, 1]) from checkpoint, the shape in current model is torch.Size([384, 768, 1, 1]).
	size mismatch for feat_decoder.projects.2.bias: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([384]).
	size mismatch for feat_decoder.projects.3.weight: copying a param with shape torch.Size([1024, 1024, 1, 1]) from checkpoint, the shape in current model is torch.Size([768, 768, 1, 1]).
	size mismatch for feat_decoder.projects.3.bias: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for feat_decoder.resize_layers.0.weight: copying a param with shape torch.Size([256, 256, 4, 4]) from checkpoint, the shape in current model is torch.Size([96, 96, 4, 4]).
	size mismatch for feat_decoder.resize_layers.0.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([96]).
	size mismatch for feat_decoder.resize_layers.1.weight: copying a param with shape torch.Size([512, 512, 2, 2]) from checkpoint, the shape in current model is torch.Size([192, 192, 2, 2]).
	size mismatch for feat_decoder.resize_layers.1.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([192]).
	size mismatch for feat_decoder.resize_layers.3.weight: copying a param with shape torch.Size([1024, 1024, 3, 3]) from checkpoint, the shape in current model is torch.Size([768, 768, 3, 3]).
	size mismatch for feat_decoder.resize_layers.3.bias: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([768]).
	size mismatch for feat_decoder.scratch.layer1_rn.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 96, 3, 3]).
	size mismatch for feat_decoder.scratch.layer2_rn.weight: copying a param with shape torch.Size([256, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 192, 3, 3]).
	size mismatch for feat_decoder.scratch.layer3_rn.weight: copying a param with shape torch.Size([256, 1024, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 384, 3, 3]).
	size mismatch for feat_decoder.scratch.layer4_rn.weight: copying a param with shape torch.Size([256, 1024, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 768, 3, 3]).
	size mismatch for feat_decoder.scratch.refinenet1.out_conv.weight: copying a param with shape torch.Size([256, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([128, 128, 1, 1]).
	size mismatch for feat_decoder.scratch.refinenet1.out_conv.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for feat_decoder.scratch.refinenet1.resConfUnit1.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 128, 3, 3]).
	size mismatch for feat_decoder.scratch.refinenet1.resConfUnit1.conv1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for feat_decoder.scratch.refinenet1.resConfUnit1.conv2.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 128, 3, 3]).
	size mismatch for feat_decoder.scratch.refinenet1.resConfUnit1.conv2.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for feat_decoder.scratch.refinenet1.resConfUnit2.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 128, 3, 3]).
	size mismatch for feat_decoder.scratch.refinenet1.resConfUnit2.conv1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for feat_decoder.scratch.refinenet1.resConfUnit2.conv2.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 128, 3, 3]).
	size mismatch for feat_decoder.scratch.refinenet1.resConfUnit2.conv2.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for feat_decoder.scratch.refinenet2.out_conv.weight: copying a param with shape torch.Size([256, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([128, 128, 1, 1]).
	size mismatch for feat_decoder.scratch.refinenet2.out_conv.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for feat_decoder.scratch.refinenet2.resConfUnit1.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 128, 3, 3]).
	size mismatch for feat_decoder.scratch.refinenet2.resConfUnit1.conv1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for feat_decoder.scratch.refinenet2.resConfUnit1.conv2.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 128, 3, 3]).
	size mismatch for feat_decoder.scratch.refinenet2.resConfUnit1.conv2.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for feat_decoder.scratch.refinenet2.resConfUnit2.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 128, 3, 3]).
	size mismatch for feat_decoder.scratch.refinenet2.resConfUnit2.conv1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for feat_decoder.scratch.refinenet2.resConfUnit2.conv2.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 128, 3, 3]).
	size mismatch for feat_decoder.scratch.refinenet2.resConfUnit2.conv2.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for feat_decoder.scratch.refinenet3.out_conv.weight: copying a param with shape torch.Size([256, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([128, 128, 1, 1]).
	size mismatch for feat_decoder.scratch.refinenet3.out_conv.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for feat_decoder.scratch.refinenet3.resConfUnit1.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 128, 3, 3]).
	size mismatch for feat_decoder.scratch.refinenet3.resConfUnit1.conv1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for feat_decoder.scratch.refinenet3.resConfUnit1.conv2.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 128, 3, 3]).
	size mismatch for feat_decoder.scratch.refinenet3.resConfUnit1.conv2.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for feat_decoder.scratch.refinenet3.resConfUnit2.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 128, 3, 3]).
	size mismatch for feat_decoder.scratch.refinenet3.resConfUnit2.conv1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for feat_decoder.scratch.refinenet3.resConfUnit2.conv2.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 128, 3, 3]).
	size mismatch for feat_decoder.scratch.refinenet3.resConfUnit2.conv2.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for feat_decoder.scratch.refinenet4.out_conv.weight: copying a param with shape torch.Size([256, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([128, 128, 1, 1]).
	size mismatch for feat_decoder.scratch.refinenet4.out_conv.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for feat_decoder.scratch.refinenet4.resConfUnit1.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 128, 3, 3]).
	size mismatch for feat_decoder.scratch.refinenet4.resConfUnit1.conv1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for feat_decoder.scratch.refinenet4.resConfUnit1.conv2.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 128, 3, 3]).
	size mismatch for feat_decoder.scratch.refinenet4.resConfUnit1.conv2.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for feat_decoder.scratch.refinenet4.resConfUnit2.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 128, 3, 3]).
	size mismatch for feat_decoder.scratch.refinenet4.resConfUnit2.conv1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for feat_decoder.scratch.refinenet4.resConfUnit2.conv2.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 128, 3, 3]).
	size mismatch for feat_decoder.scratch.refinenet4.resConfUnit2.conv2.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([128]).

Set the environment variable HYDRA_FULL_ERROR=1 for a complete stack trace.
[2025-08-10 22:20:08,739] torch.distributed.elastic.multiprocessing.api: [WARNING] Sending process 325875 closing signal SIGTERM
[2025-08-10 22:20:08,739] torch.distributed.elastic.multiprocessing.api: [WARNING] Sending process 325876 closing signal SIGTERM
[2025-08-10 22:20:08,739] torch.distributed.elastic.multiprocessing.api: [WARNING] Sending process 325878 closing signal SIGTERM
[2025-08-10 22:20:08,917] torch.distributed.elastic.multiprocessing.api: [ERROR] failed (exitcode: 1) local_rank: 2 (pid: 325877) of binary: /home/s0214/.conda/envs/monster/bin/python
Traceback (most recent call last):
  File "/home/s0214/.conda/envs/monster/bin/accelerate", line 8, in <module>
    sys.exit(main())
  File "/home/s0214/.conda/envs/monster/lib/python3.8/site-packages/accelerate/commands/accelerate_cli.py", line 48, in main
    args.func(args)
  File "/home/s0214/.conda/envs/monster/lib/python3.8/site-packages/accelerate/commands/launch.py", line 1159, in launch_command
    multi_gpu_launcher(args)
  File "/home/s0214/.conda/envs/monster/lib/python3.8/site-packages/accelerate/commands/launch.py", line 793, in multi_gpu_launcher
    distrib_run.run(args)
  File "/home/s0214/.conda/envs/monster/lib/python3.8/site-packages/torch/distributed/run.py", line 797, in run
    elastic_launch(
  File "/home/s0214/.conda/envs/monster/lib/python3.8/site-packages/torch/distributed/launcher/api.py", line 134, in __call__
    return launch_agent(self._config, self._entrypoint, list(args))
  File "/home/s0214/.conda/envs/monster/lib/python3.8/site-packages/torch/distributed/launcher/api.py", line 264, in launch_agent
    raise ChildFailedError(
torch.distributed.elastic.multiprocessing.errors.ChildFailedError: 
============================================================
train_whu.py FAILED
------------------------------------------------------------
Failures:
  <NO_OTHER_FAILURES>
------------------------------------------------------------
Root Cause (first observed failure):
[0]:
  time      : 2025-08-10_22:20:08
  host      : tesla-v100
  rank      : 2 (local_rank: 2)
  exitcode  : 1 (pid: 325877)
  error_file: <N/A>
  traceback : To enable traceback see: https://pytorch.org/docs/stable/elastic/errors.html
============================================================
